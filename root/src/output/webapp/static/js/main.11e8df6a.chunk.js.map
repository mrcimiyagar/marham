{"version":3,"sources":["App.js","serviceWorker.js","index.js","HideAppBar.js","Renderer.js"],"names":["App","props","state","bodyObj","loadState","setAppInstance","window","options","method","headers","body","JSON","stringify","fetch","config","url","then","rawRes","json","res","document","dir","setState","className","style","width","height","this","backgroundColor","zIndex","position","left","top","React","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","HideOnScroll","children","trigger","useScrollTrigger","target","undefined","appear","direction","in","HideAppBar","childrenOfAppBar","jss","create","plugins","jssPreset","rtl","RTL","Components","Container","Button","Box","Checkbox","ButtonGroup","Fab","Grid","GridList","GridListTile","AppBar","Typography","EditIcon","ContactSupportIcon","BottomNavigation","BottomNavigationAction","FolderIcon","RestoreIcon","FavoriteIcon","LocationOnIcon","LocalHospitalIcon","Avatar","ListItem","List","ListSubheader","ListItemText","DeleteIcon","ListItemSecondaryAction","IconButton","Paper","Divider","CloseIcon","AccountCircleIcon","TextField","VpnKeyIcon","InputLabel","Input","FormHelperText","FormControl","FormControlLabel","Icon","ListAltIcon","DoneIcon","animations","bounce","fadeIn","fadeInUp","fadeInUpBig","fadeInDownBig","fadeInDown","fadeInRightBig","fadeOutUpBig","fadeOutDownBig","appInstance","instance","objCounter","objDict","colorsDict","hooksList","searchForHooks","control","properties","prop","value","startsWith","endsWith","variableName","substring","length","trim","push","child","AppBody","stateObj","useRef","forEach","hook","useState","transferredControl","controlType","text","eval","elpisTag","color","controlId","MyComponent","GlobalStyle","fontName","fontFamily","createGlobalStyle","fontPath","el","refsDict","current","result","animation","keyframes","ContainerDiv","styled","div","BouncyDiv","animationTime","hideOnScroll","id","ref","map","theme","createMuiTheme","palette","secondary","main"],"mappings":"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","file":"static/js/main.11e8df6a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport config from './config.json'\nimport {setAppInstance, AppBody} from './Renderer';\n\nexport class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bodyObj: null,\n      loadState: 'loading'\n    };\n    setAppInstance(this);\n    window['app'] = this;\n    const options = {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"token\": \"...\"\n      })\n    };\n    fetch(config.url, options)\n      .then(rawRes => rawRes.json())\n      .then(res => {\n        document.body.dir = 'rtl'\n        this.setState({bodyObj: res});\n      });\n  }\n\n  render() {\n    let result = (\n      <div className=\"App\" style={{\n        width: '100%',\n        height: '100vh'\n      }}>\n        {this.state.bodyObj === null ? null : <AppBody body={this.state.bodyObj}/>}\n        {this.state.loadState !== 'loading' ? null : <div style={{backgroundColor: '#fff', zIndex: 1000000, position: 'fixed', left: 0, top: 0, width: '100%', height: '100%'}}></div>}\n      </div>\n    );\n    return result;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function HideAppBar(props) {\n  return (\n    <HideOnScroll>\n      <AppBar {...props}>\n          {props.childrenOfAppBar}\n      </AppBar>\n    </HideOnScroll>\n  );\n}","\nimport React, { useState, useRef } from \"react\";\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Fab from '@material-ui/core/Fab';\nimport { AppBar, Typography, BottomNavigation, BottomNavigationAction, List, ListItem, ListSubheader,\n     ListItemText, ListItemSecondaryAction, Paper, Divider, TextField, InputLabel, Input, FormHelperText,\n     FormControl, \n     FormControlLabel,\n     Icon} from \"@material-ui/core\";\nimport { createGlobalStyle } from 'styled-components';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport Avatar from '@material-ui/core/Avatar';\nimport { fadeIn, fadeInUp, bounce, fadeInUpBig, fadeInDownBig, fadeInRightBig,\n         fadeInDown } from 'react-animations'\nimport styled, { keyframes } from 'styled-components';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\nimport PropTypes from 'prop-types';\nimport CloseIcon from '@material-ui/icons/Close';\nimport HideAppBar from './HideAppBar';\nimport fadeOutUpBig from \"react-animations/lib/fade-out-up-big\";\nimport fadeOutDownBig from \"react-animations/lib/fade-out-down-big\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport DoneIcon from '@material-ui/icons/Done';\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nfunction RTL(props) {\n  return (\n    <StylesProvider jss={jss}>\n      {props.children}\n    </StylesProvider>\n  );\n}\n\nlet Components = {\n    'Container': Container,\n    'Button': Button,\n    'Box': Box,\n    'Checkbox': Checkbox,\n    'ButtonGroup': ButtonGroup,\n    'Fab': Fab,\n    'Grid': Grid,\n    'GridList': GridList,\n    'GridListTile': GridListTile,\n    'AppBar': AppBar,\n    'Typography': Typography,\n    'EditIcon': EditIcon,\n    'ContactSupportIcon': ContactSupportIcon,\n    'BottomNavigation': BottomNavigation,\n    'BottomNavigationAction': BottomNavigationAction,\n    'FolderIcon': FolderIcon,\n    'RestoreIcon': RestoreIcon,\n    'FavoriteIcon': FavoriteIcon,\n    'LocationOnIcon': LocationOnIcon,\n    'LocalHospitalIcon': LocalHospitalIcon,\n    'Avatar': Avatar,\n    'ListItem': ListItem,\n    'List': List,\n    'ListSubheader': ListSubheader,\n    'ListItemText': ListItemText,\n    'DeleteIcon': DeleteIcon,\n    'ListItemSecondaryAction': ListItemSecondaryAction,\n    'IconButton': IconButton,\n    'Paper': Paper,\n    'Divider': Divider,\n    'CloseIcon': CloseIcon,\n    'AccountCircleIcon': AccountCircleIcon,\n    'TextField': TextField,\n    'VpnKeyIcon': VpnKeyIcon,\n    'InputLabel': InputLabel,\n    'Input': Input,\n    'FormHelperText': FormHelperText,\n    'FormControl': FormControl,\n    'FormControlLabel': FormControlLabel,\n    'Icon': Icon,\n    'ListAltIcon': ListAltIcon,\n    'DoneIcon': DoneIcon\n}\n\nlet animations = {\n    'bounce': bounce,\n    'fadeIn': fadeIn,\n    'fadeInUp': fadeInUp,\n    'fadeInUpBig': fadeInUpBig,\n    'fadeInDownBig': fadeInDownBig,\n    'fadeInDown': fadeInDown,\n    'fadeInRightBig': fadeInRightBig,\n    'fadeOutUpBig': fadeOutUpBig,\n    'fadeOutDownBig': fadeOutDownBig,\n}\n\nexport let appInstance = null;\n\nexport function setAppInstance(instance) {\n    appInstance = instance;\n}\n\nlet objCounter = 0;\nlet objDict = {};\nlet colorsDict = {};\n\nlet hooksList = [];\n\nfunction searchForHooks(control) {\n    if (control.properties !== undefined) {\n        for (let prop in control.properties) {\n            if (prop === 'ref') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    window['refsDict'][variableName] = 'Empty';\n                }\n            }\n            else if ((typeof control.properties[prop]) === 'string') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\"))\n                        continue;\n                    else {\n                        hooksList.push(variableName);\n                    }\n                }\n            }\n        }\n    }\n\n    for (let child in control.children) {\n        searchForHooks(control.children[child]);\n    }\n}\n\nlet state = null;\nlet setState = null;\n\nexport function AppBody(props) {\n    window['refsDict'] = {};\n    let stateObj = {};\n    hooksList = [];\n    searchForHooks(props.body);\n    window['refsDict'] = useRef(window['refsDict']);\n    hooksList.forEach(hook => {\n        stateObj = {\n            ...stateObj,\n            [hook]: null\n        };\n    });\n    [state, setState] = useState(stateObj);\n    window['setState'] = setState;\n    window['state'] = state;\n    return (\n            <div style={{width: '100%', height: '100%'}}>\n                {props.body === null ? null : render(props.body)}\n            </div>\n        );\n}\n\nexport function render(control) {\n    let transferredControl = {};\n    if (control.controlType === 'Text') return control.text;\n    else if (control.controlType === 'br') return (<br/>);\n    else if (control.controlType === undefined) return;\n    if (control.properties !== undefined) {\n        for (let prop in control.properties) {\n            if ((typeof control.properties[prop]) === 'string') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\"))\n                        control.properties[prop] = eval(variableName);\n                }\n            }\n            else if ((typeof control.properties[prop]) === 'object') {\n                if (control.elpisTag === undefined) {\n                    control.elpisTag = objCounter + '';\n                    objDict[objCounter + ''] = render(control.properties[prop]);\n                    objDict[objCounter + '-prop'] = prop;\n                    objCounter++;\n                    control.properties[prop] = undefined;\n                }\n            }\n        }\n    }\n    if (control.style !== undefined) {\n        for (let prop in control.style) {\n            if ((typeof control.style[prop]) === 'string') {\n                let value = control.style[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\"))\n                        control.style[prop] = eval(variableName);\n                }\n            }\n        }\n    }\n    let color = undefined;\n    if (control.controlId !== undefined) {\n        color = colorsDict[control.controlId];\n        control.properties.color = 'secondary';\n    }\n    else if (control.properties !== undefined && control.properties.color !== undefined) {\n        color = control.properties.color;\n        control.controlId = objCounter + '';\n        colorsDict[objCounter + ''] = color;\n        objCounter++;\n        control.properties.color = 'secondary';\n    }\n    var MyComponent = Components[control.controlType];\n    if (MyComponent === undefined) {\n        MyComponent = control.controlType;\n    }\n    let GlobalStyle = undefined;\n    if (control.properties !== undefined && control.properties.fontName !== undefined) {\n        control.style = {\n            ...control.style,\n            fontFamily: control.properties.fontName\n        };\n        GlobalStyle = createGlobalStyle`\n            @font-face {\n                font-family: '${control.properties.fontName}';\n                src: url('${control.properties.fontPath}')\n            }`\n    }\n    for (let prop in control.properties) {\n        if ((typeof control.properties[prop]) === 'string' && control.properties[prop].startsWith('$')) {\n            if (prop === 'ref') {\n                transferredControl[prop] = (el) => {window.refsDict.current[control.properties[prop].substring(2, control.properties[prop].length - 1)] = el;};\n            } else {\n                transferredControl[prop] = state[control.properties[prop].substring(2, control.properties[prop].length - 1)];\n            }\n        }\n        else {\n            transferredControl[prop] = control.properties[prop];\n        }\n    }\n    let result = undefined;\n    if (control.properties !== undefined && control.properties.animation !== undefined) {\n        const animation = keyframes`${animations[transferredControl.animation]}`;\n        const ContainerDiv = styled.div`\n            z-index: ${control.style.zIndex};\n        `;\n        const BouncyDiv = styled.div`\n            animation: ${transferredControl.animationTime} forwards ${animation};\n        `;\n        if (control.properties['animation'].startsWith('${') && control.properties['animation'].endsWith('}')) {\n            if (control.controlType === 'AppBar' && control.properties.hideOnScroll === true) {\n                result = state[control.properties['animation'].substring(2, control.properties['animation'].length - 1)] !== ''\n                ? (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                 {(<HideAppBar style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {[objDict[control.elpisTag + '-prop']]: objDict[control.elpisTag]})}\n                     childrenOfAppBar={\n                        control.children !== undefined ? control.children.map((child) => {\n                            return render(child);\n                        }) : undefined\n                    }/>)}\n               </BouncyDiv></ContainerDiv>) :\n                 (<HideAppBar style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {[objDict[control.elpisTag + '-prop']]: objDict[control.elpisTag]})}\n                     childrenOfAppBar={\n                        control.children !== undefined ? control.children.map((child) => {\n                            return render(child);\n                        }) : undefined\n                    }/>);\n            }\n            else {\n              result = state[control.properties['animation'].substring(2, control.properties['animation'].length - 1)] !== ''\n               ? (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                {<MyComponent\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {[objDict[control.elpisTag + '-prop']]: objDict[control.elpisTag]})}\n                > {control.children !== undefined ? control.children.map((child) => {\n                    return render(child);\n                }) : undefined}\n                </MyComponent>}\n              </BouncyDiv></ContainerDiv>) :\n                (<MyComponent\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {[objDict[control.elpisTag + '-prop']]: objDict[control.elpisTag]})}\n                > {control.children !== undefined ? control.children.map((child) => {\n                    return render(child);\n                }) : undefined}\n                </MyComponent>);\n            }\n        }\n        else {\n            if (control.controlType === 'AppBar' && control.properties.hideOnScroll === true) {\n                result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>(<HideAppBar style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {[objDict[control.elpisTag + '-prop']]: objDict[control.elpisTag]})}\n                     childrenOfAppBar={\n                        control.children !== undefined ? control.children.map((child) => {\n                            return render(child);\n                        }) : undefined\n                    }/>)</BouncyDiv></ContainerDiv>);\n            }\n            else {\n              result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                {<MyComponent\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {[objDict[control.elpisTag + '-prop']]: objDict[control.elpisTag]})}\n                >{control.children !== undefined ? control.children.map((child) => {\n                    return render(child);\n                }) : undefined}\n                </MyComponent>}\n              </BouncyDiv></ContainerDiv>);\n            }\n        }\n    }\n    else {\n        if (control.controlType === 'AppBar' && control.properties.hideOnScroll === true) {\n            result = (<HideAppBar style={control.style}\n                {...transferredControl}\n                ref={transferredControl.ref}\n                {...(control.elpisTag !== undefined && {[objDict[control.elpisTag + '-prop']]: objDict[control.elpisTag]})}\n                 childrenOfAppBar={\n                    control.children !== undefined ? control.children.map((child) => {\n                        return render(child);\n                    }) : undefined\n                }/>);\n        }\n        else {\n            result = \n              (<MyComponent\n                style={control.style}\n                {...transferredControl}\n                ref={transferredControl.ref}\n                {...(control.elpisTag !== undefined && {[objDict[control.elpisTag + '-prop']]: objDict[control.elpisTag]})}>\n                {control.children !== undefined ? control.children.map((child) => {\n                    return render(child);\n                }) : undefined}\n                </MyComponent>);\n        }\n    }\n    if ((color === undefined || color === 'secondary') && (control.properties === undefined || control.properties.fontName === undefined)) return result;\n    let theme = null;\n    theme = createMuiTheme({\n        ...(color !== undefined && color !== 'secondary' && {palette: {\n            secondary: {\n                main: color\n            }\n        }})\n    });\n    if (GlobalStyle === undefined) {\n        result = <ThemeProvider theme={theme}>\n                {result}\n            </ThemeProvider>\n    }\n    else {\n        result = <ThemeProvider theme={theme}>\n                    <div>\n                        <GlobalStyle/>\n                        {result}\n                    </div>\n                </ThemeProvider>\n    }\n    return result;\n}"],"sourceRoot":""}