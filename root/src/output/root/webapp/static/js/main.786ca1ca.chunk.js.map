{"version":3,"sources":["HideAppBar.js","Renderer.js","App.js","serviceWorker.js","index.js"],"names":["HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","appear","direction","in","HideAppBar","childrenOfAppBar","jss","create","plugins","jssPreset","rtl","RTL","Components","EventIcon","AddIcon","TablePagination","MUIDataTable","AddAPhotoIcon","OutlinedInput","FilledInput","DescriptionIcon","AddCircleOutlineIcon","PlaylistAddCheckIcon","PersonIcon","SearchIcon","AssignmentIcon","HomeIcon","NotificationsIcon","SettingsIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Container","Button","Box","Checkbox","ButtonGroup","Fab","Grid","GridList","GridListTile","AppBar","Typography","EditIcon","ContactSupportIcon","BottomNavigation","BottomNavigationAction","FolderIcon","RestoreIcon","FavoriteIcon","LocationOnIcon","LocalHospitalIcon","Avatar","ListItem","List","ListSubheader","ListItemText","DeleteIcon","ListItemSecondaryAction","IconButton","Paper","Divider","CloseIcon","AccountCircleIcon","TextField","VpnKeyIcon","InputLabel","Input","FormHelperText","FormControl","FormControlLabel","Icon","ListAltIcon","DoneIcon","ChatIcon","React","Fragment","InputBase","RssFeedIcon","Select","MenuItem","FluentButton","TransformCard","InfoOutlinedIcon","animations","bounce","fadeIn","fadeInUp","fadeInUpBig","fadeInDownBig","fadeInDown","fadeInRightBig","fadeOutUpBig","fadeOutDownBig","bounceOutDown","bounceInUp","zoomIn","zoomOut","appInstance","setAppInstance","instance","objCounter","objDict","colorsDict","hooksList","searchForHooks","control","properties","prop","idDict","value","startsWith","endsWith","variableName","substring","length","trim","push","child","state","setState","DateTimeFormat","AppBody","bodyObj","body","loadedCount","executeFunction","AppInnerBody","this","Component","areIntlLocalesSupported","global","Intl","IntlPolyfill","require","stateObj","useRef","forEach","hook","useState","elId","property","style","document","getElementById","width","height","Render","transferredControl","controlType","text","eval","Array","isArray","elpisTag","color","controlId","MyComponent","GlobalStyle","fontName","fontFamily","createGlobalStyle","fontPath","el","refsDict","current","objects","utils","persianUtils","result","animation","keyframes","ContainerDiv","zIndex","styled","div","BouncyDiv","animationTime","hideOnScroll","id","ref","map","placeholderColor","theme","createMuiTheme","overrides","MuiInput","input","palette","secondary","main","App","loadState","options","method","headers","JSON","stringify","fetch","config","url","then","rawRes","json","res","className","backgroundColor","position","left","top","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.786ca1ca.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function HideAppBar(props) {\n  return (\n    <HideOnScroll>\n      <AppBar {...props}>\n          {props.childrenOfAppBar}\n      </AppBar>\n    </HideOnScroll>\n  );\n}","\nimport React, { useState, useRef } from \"react\";\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Fab from '@material-ui/core/Fab';\nimport { AppBar, Typography, BottomNavigation, BottomNavigationAction, List, ListItem, ListSubheader,\n     ListItemText, ListItemSecondaryAction, Paper, Divider, TextField, InputLabel, Input, FormHelperText,\n     FormControl, \n     FormControlLabel,\n     Icon,\n     InputBase,\n     Select,\n     MenuItem,\n     FilledInput,\n     OutlinedInput,\n     TablePagination} from \"@material-ui/core\";\nimport { createGlobalStyle } from 'styled-components';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport Avatar from '@material-ui/core/Avatar';\nimport { fadeIn, fadeInUp, bounce, fadeInUpBig, fadeInDownBig, fadeInRightBig,\n         fadeInDown, bounceOutDown, bounceInUp, zoomIn, zoomOut } from 'react-animations'\nimport styled, { keyframes } from 'styled-components';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\nimport PropTypes from 'prop-types';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CloseIcon from '@material-ui/icons/Close';\nimport HideAppBar from './HideAppBar';\nimport fadeOutUpBig from \"react-animations/lib/fade-out-up-big\";\nimport fadeOutDownBig from \"react-animations/lib/fade-out-down-big\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RssFeedIcon from '@material-ui/icons/RssFeed';\nimport {Button as FluentButton} from 'react-uwp/Button';\nimport {TransformCard} from 'react-uwp/TransformCard';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport MUIDataTable from \"mui-datatables\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DatePicker from 'material-ui/DatePicker';\nimport areIntlLocalesSupported from 'intl-locales-supported';\nimport persianUtils from 'material-ui-persian-date-picker-utils';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport TimePicker from 'material-ui/TimePicker';\nimport EventIcon from '@material-ui/icons/Event';\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nfunction RTL(props) {\n  return (\n    <StylesProvider jss={jss}>\n      {props.children}\n    </StylesProvider>\n  );\n}\n\nlet Components = {\n    'EventIcon': EventIcon,\n    'AddIcon': AddIcon,\n    'TablePagination': TablePagination,\n    'MUIDataTable': MUIDataTable,\n    'AddAPhotoIcon': AddAPhotoIcon,\n    'OutlinedInput': OutlinedInput,\n    'FilledInput': FilledInput,\n    'DescriptionIcon': DescriptionIcon,\n    'AddCircleOutlineIcon': AddCircleOutlineIcon,\n    'PlaylistAddCheckIcon': PlaylistAddCheckIcon,\n    'PersonIcon': PersonIcon,\n    'SearchIcon': SearchIcon,\n    'AssignmentIcon': AssignmentIcon,\n    'HomeIcon': HomeIcon,\n    'NotificationsIcon': NotificationsIcon,\n    'SettingsIcon': SettingsIcon,\n    'Table': Table,\n    'TableBody': TableBody,\n    'TableCell': TableCell,\n    'TableContainer': TableContainer,\n    'TableHead': TableHead,\n    'TableRow': TableRow,\n    'Container': Container,\n    'Button': Button,\n    'Box': Box,\n    'Checkbox': Checkbox,\n    'ButtonGroup': ButtonGroup,\n    'Fab': Fab,\n    'Grid': Grid,\n    'GridList': GridList,\n    'GridListTile': GridListTile,\n    'AppBar': AppBar,\n    'Typography': Typography,\n    'EditIcon': EditIcon,\n    'ContactSupportIcon': ContactSupportIcon,\n    'BottomNavigation': BottomNavigation,\n    'BottomNavigationAction': BottomNavigationAction,\n    'FolderIcon': FolderIcon,\n    'RestoreIcon': RestoreIcon,\n    'FavoriteIcon': FavoriteIcon,\n    'LocationOnIcon': LocationOnIcon,\n    'LocalHospitalIcon': LocalHospitalIcon,\n    'Avatar': Avatar,\n    'ListItem': ListItem,\n    'List': List,\n    'ListSubheader': ListSubheader,\n    'ListItemText': ListItemText,\n    'DeleteIcon': DeleteIcon,\n    'ListItemSecondaryAction': ListItemSecondaryAction,\n    'IconButton': IconButton,\n    'Paper': Paper,\n    'Divider': Divider,\n    'CloseIcon': CloseIcon,\n    'AccountCircleIcon': AccountCircleIcon,\n    'TextField': TextField,\n    'VpnKeyIcon': VpnKeyIcon,\n    'InputLabel': InputLabel,\n    'Input': Input,\n    'FormHelperText': FormHelperText,\n    'FormControl': FormControl,\n    'FormControlLabel': FormControlLabel,\n    'Icon': Icon,\n    'ListAltIcon': ListAltIcon,\n    'DoneIcon': DoneIcon,\n    'ChatIcon': ChatIcon,\n    'React.Fragment': React.Fragment,\n    'InputBase': InputBase,\n    'RssFeedIcon': RssFeedIcon,\n    'Select': Select,\n    'MenuItem': MenuItem,\n    'Fluent.Button': FluentButton,\n    'Fluent.TransformCard': TransformCard,\n    'InfoOutlinedIcon': InfoOutlinedIcon,\n}\n\nlet animations = {\n    'bounce': bounce,\n    'fadeIn': fadeIn,\n    'fadeInUp': fadeInUp,\n    'fadeInUpBig': fadeInUpBig,\n    'fadeInDownBig': fadeInDownBig,\n    'fadeInDown': fadeInDown,\n    'fadeInRightBig': fadeInRightBig,\n    'fadeOutUpBig': fadeOutUpBig,\n    'fadeOutDownBig': fadeOutDownBig,\n    'bounceOutDown': bounceOutDown,\n    'bounceInUp': bounceInUp,\n    'zoomIn': zoomIn,\n    'zoomOut': zoomOut\n}\n\nexport let appInstance = null;\n\nexport function setAppInstance(instance) {\n    appInstance = instance;\n}\n\nlet objCounter = 0;\nlet objDict = {};\nlet colorsDict = {};\n\nlet hooksList = [];\n\nfunction searchForHooks(control) {\n    if (control.properties !== undefined) {\n        for (let prop in control.properties) {\n            if (prop === 'id') {\n                idDict[control.properties[prop]] = control;\n            }\n            else if (prop === 'ref') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    window['refsDict'][variableName] = 'Empty';\n                }\n            }\n            else if ((typeof control.properties[prop]) === 'string') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\"))\n                        continue;\n                    else {\n                        hooksList.push(variableName);\n                    }\n                }\n            }\n        }\n    }\n\n    for (let child in control.children) {\n        searchForHooks(control.children[child]);\n    }\n}\n\nlet state = null;\nlet setState = null;\nlet idDict = {};\nlet DateTimeFormat;\n\nexport class AppBody extends React.Component {\n\n    bodyObj;\n\n    constructor(props) {\n        super(props);\n        this.bodyObj = props.body;\n    }\n\n    componentDidMount() {\n        window.loadedCount++;\n        if (window.loadedCount >= 2)\n            window.executeFunction(\"main\", {});\n    }\n    \n    render() {\n        return (\n            <AppInnerBody body={this.bodyObj}/>\n        );\n    }\n}\n\nexport function AppInnerBody(props) {\n    if (areIntlLocalesSupported(['fr', 'fa-IR'])) {\n        DateTimeFormat = global.Intl.DateTimeFormat;\n    } else {\n        const IntlPolyfill = require('intl');\n        DateTimeFormat = IntlPolyfill.DateTimeFormat;\n        require('intl/locale-data/jsonp/fr');\n        require('intl/locale-data/jsonp/fa-IR');\n    }\n    window['refsDict'] = {};\n    let stateObj = {};\n    if (state !== null) stateObj = state;\n    hooksList = [];\n    searchForHooks(props.body);\n    window['refsDict'] = useRef(window['refsDict']);\n    hooksList.forEach(hook => {\n        stateObj = {\n            ...stateObj,\n            [hook]: null\n        };\n    });\n    [state, setState] = useState(stateObj);\n    window['setState'] = setState;\n    window['state'] = state;\n    window['setStyle'] = (elId, property, value) => {\n        idDict[elId].style[property] = value;\n        document.getElementById(elId).style[property] = value;\n    };\n    return (\n        <div style={{width: '100%', height: '100%'}}>\n            <Render body={props.body}/>\n        </div>\n    );\n}\n\nexport function Render(props) {\n    let control = props.body;\n    let transferredControl = {};\n    if (control.controlType === 'Text') return control.text;\n    else if (control.controlType === 'br') return (<br/>);\n    else if (control.controlType === undefined) return;\n    if (control.properties !== undefined) {\n        for (let prop in control.properties) {\n            if ((typeof control.properties[prop]) === 'string') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\")) {\n                        control.properties[prop] = eval(variableName);\n                    }\n                }\n                else if (value.startsWith('_{') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    control.properties[prop] = eval(variableName);\n                }\n            }\n            else if ((typeof control.properties[prop]) === 'object' && !Array.isArray(control.properties[prop])) {\n                if (control.elpisTag === undefined) {\n                    control.elpisTag = objCounter + '';\n                }\n                objDict[control.elpisTag + '-' + prop] = Render({body: control.properties[prop]});\n                objCounter++;\n                control.properties[prop] = undefined;\n            }\n        }\n    }\n    if (control.style !== undefined) {\n        for (let prop in control.style) {\n            if ((typeof control.style[prop]) === 'string') {\n                let value = control.style[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\"))\n                        control.style[prop] = eval(variableName);\n                }\n                else if (value.startsWith('_{') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    control.properties[prop] = eval(variableName);\n                }\n            }\n        }\n    }\n    let color = undefined;\n    if (control.controlId !== undefined) {\n        color = colorsDict[control.controlId];\n        control.properties.color = 'secondary';\n    }\n    else if (control.properties !== undefined && control.properties.color !== undefined) {\n        color = control.properties.color;\n        control.controlId = objCounter + '';\n        colorsDict[objCounter + ''] = color;\n        objCounter++;\n        control.properties.color = 'secondary';\n    }\n    var MyComponent = Components[control.controlType];\n    if (MyComponent === undefined) {\n        MyComponent = control.controlType;\n    }\n    let GlobalStyle = undefined;\n    if (control.properties !== undefined && control.properties.fontName !== undefined) {\n        control.style = {\n            ...control.style,\n            fontFamily: control.properties.fontName\n        };\n        GlobalStyle = createGlobalStyle`\n            @font-face {\n                font-family: '${control.properties.fontName}';\n                src: url('${control.properties.fontPath}')\n            }`\n    }\n    for (let prop in control.properties) {\n        if ((typeof control.properties[prop]) === 'string' && control.properties[prop].startsWith('$')) {\n            if (prop === 'ref') {\n                transferredControl[prop] = (el) => {window.refsDict.current[control.properties[prop].substring(2, control.properties[prop].length - 1)] = el;};\n            } else {\n                transferredControl[prop] = state[control.properties[prop].substring(2, control.properties[prop].length - 1)];\n            }\n        }\n        else {\n            transferredControl[prop] = control.properties[prop];\n        }\n    }\n    let objects = {};\n    if (control.elpisTag !== undefined) {\n        for (let prop in objDict) {\n            if (prop.startsWith(control.elpisTag + '-')) {\n                objects[prop.substring((control.elpisTag + '-').length)] = objDict[prop];\n            }\n        }\n    }\n    if (control.controlType === 'DatePicker') {\n        return (<MuiThemeProvider>\n                    <DatePicker\n                        DateTimeFormat={DateTimeFormat}\n                        utils={persianUtils}\n                        {...transferredControl}\n                        style={control.style}\n                    />\n                </MuiThemeProvider>);\n    }\n    else if (control.controlType === 'TimePicker') {\n        return (<MuiThemeProvider>\n                    <TimePicker\n                        {...transferredControl}\n                        style={control.style}/>\n                </MuiThemeProvider>)\n    }\n    let result = undefined;\n    if (control.properties !== undefined && control.properties.animation !== undefined) {\n        const animation = keyframes`${animations[transferredControl.animation]}`;\n        const ContainerDiv = control.style != undefined && control.style.zIndex !== undefined ? styled.div`\n            z-index: ${control.style.zIndex};\n            position: static;\n        ` : Box;\n        const BouncyDiv = styled.div`\n            animation: ${transferredControl.animationTime} forwards ${animation};\n        `;\n        if (control.properties['animation'].startsWith('${') && control.properties['animation'].endsWith('}')) {\n            if (control.controlType === 'AppBar' && control.properties.hideOnScroll === true) {\n                result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                 {(<HideAppBar style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {...objects})}\n                     childrenOfAppBar={\n                        control.children !== undefined ? control.children.map((child) => {\n                            return Render({body: child});\n                        }) : undefined\n                    }/>)}\n               </BouncyDiv></ContainerDiv>)\n            }\n            else {\n              result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                {<MyComponent\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    \n                    {...(control.elpisTag !== undefined && {...objects})}\n                > {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n                </MyComponent>}\n              </BouncyDiv></ContainerDiv>);\n            }\n        }\n        else {\n            if (control.controlType === 'AppBar' && control.properties.hideOnScroll === true) {\n                result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                    (<HideAppBar style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {...objects})}\n                     childrenOfAppBar={\n                        control.children !== undefined ? control.children.map((child) => {\n                            return Render({body: child});\n                        }) : undefined\n                    }/>)</BouncyDiv></ContainerDiv>);\n            }\n            else {\n              result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                {<MyComponent\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    \n                    {...(control.elpisTag !== undefined && {...objects})}\n                >{control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n                </MyComponent>}\n              </BouncyDiv></ContainerDiv>);\n            }\n        }\n    }\n    else {\n        if (control.controlType === 'AppBar' && control.properties.hideOnScroll === true) {\n            result = (<HideAppBar style={control.style}\n                {...transferredControl}\n                ref={transferredControl.ref}\n                {...(control.elpisTag !== undefined && {...objects})}\n                 childrenOfAppBar={\n                    control.children !== undefined ? control.children.map((child) => {\n                        return Render({body: child});\n                    }) : undefined\n                }/>);\n        }\n        else {\n            result = \n              (<MyComponent\n                style={control.style}\n                {...transferredControl}\n                ref={transferredControl.ref}\n                \n                {...(control.elpisTag !== undefined && {...objects})}>\n                {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n                </MyComponent>);\n        }\n    }\n    if ((color === undefined || color === 'secondary') && (control.properties === undefined || control.properties.placeholderColor === undefined || control.properties.fontName === undefined)) return result;\n    let theme = null;\n    theme = createMuiTheme({\n        ...(control.properties.placeholderColor !== undefined && {\n            overrides: {\n                MuiInput: {\n                  input: {\n                    \"&::placeholder\": {\n                      color: control.properties.placeholderColor\n                    }\n                  }\n                }\n            }\n        }),\n        ...(color !== undefined && color !== 'secondary' && {palette: {\n            secondary: {\n                main: color\n            }\n        }})\n    });\n    if (GlobalStyle === undefined) {\n        result = <ThemeProvider theme={theme}>\n                {result}\n            </ThemeProvider>\n    }\n    else {\n        result = <ThemeProvider theme={theme}>\n                    <div>\n                        <GlobalStyle/>\n                        {result}\n                    </div>\n                </ThemeProvider>\n    }\n    return result;\n}","import React from 'react';\nimport './App.css';\nimport config from './config.json'\nimport {setAppInstance, AppBody} from './Renderer';\nimport { Theme as UWPThemeProvider, getTheme } from \"react-uwp/Theme\";\n\nexport class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bodyObj: null,\n      loadState: 'loading'\n    };\n    setAppInstance(this);\n    window['app'] = this;\n    const options = {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"token\": \"...\"\n      })\n    };\n    fetch(config.url, options)\n      .then(rawRes => rawRes.json())\n      .then(res => {\n        this.setState({bodyObj: res});\n      });\n  }\n\n  render() {\n    let result = (\n      <div className=\"App\" style={{\n        width: '100%',\n        height: '100vh'\n      }}>\n        {this.state.bodyObj === null ? null : <AppBody body={this.state.bodyObj}/>}\n        {this.state.loadState !== 'loading' ? null : <div style={{backgroundColor: '#fff', zIndex: 1000000, position: 'fixed', left: 0, top: 0, width: '100%', height: '100%'}}></div>}\n      </div>\n    );\n    return result;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}