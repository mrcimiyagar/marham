{"version":3,"sources":["HideAppBar.js","Renderer.js","CollapsibleAppBar.js","App.js","serviceWorker.js","index.js"],"names":["HideAppBar","props","style","childrenOfAppBar","jss","create","plugins","jssPreset","rtl","RTL","children","TabPanel","value","index","other","component","role","hidden","id","aria-labelledby","p","SlideTransition","React","forwardRef","ref","direction","timeout","enter","exit","Components","FilterListIcon","PlayCircleOutlineIcon","MenuBookIcon","StarOutlineIcon","PinDropIcon","SwipeableViews","Tabs","Tab","ThemeProvider","PhoneIcon","EventIcon","AddIcon","TablePagination","MUIDataTable","AddAPhotoIcon","OutlinedInput","FilledInput","DescriptionIcon","AddCircleOutlineIcon","PlaylistAddCheckIcon","PersonIcon","SearchIcon","AssignmentIcon","HomeIcon","NotificationsIcon","SettingsIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Container","Button","Box","Checkbox","ButtonGroup","Fab","Grid","GridList","GridListTile","AppBar","Typography","EditIcon","ContactSupportIcon","BottomNavigation","BottomNavigationAction","FolderIcon","RestoreIcon","FavoriteIcon","LocationOnIcon","LocalHospitalIcon","Avatar","ListItem","List","ListSubheader","ListItemText","DeleteIcon","ListItemSecondaryAction","IconButton","Paper","Divider","CloseIcon","AccountCircleIcon","TextField","VpnKeyIcon","InputLabel","Input","FormHelperText","FormControl","FormControlLabel","Icon","ListAltIcon","DoneIcon","ChatIcon","Fragment","InputBase","RssFeedIcon","Select","MenuItem","FluentButton","TransformCard","InfoOutlinedIcon","Dialog","animations","bounce","fadeIn","fadeInUp","fadeInUpBig","fadeInDownBig","fadeInDown","fadeInRightBig","fadeOutUpBig","fadeOutDownBig","bounceOutDown","bounceInUp","zoomIn","zoomOut","appInstance","setAppInstance","instance","objCounter","objDict","colorsDict","hooksList","searchForHooks","control","undefined","properties","prop","idDict","startsWith","endsWith","variableName","substring","length","window","trim","push","child","state","setState","DateTimeFormat","AppBody","bodyObj","body","loadedCount","executeFunction","AppInnerBody","this","Component","areIntlLocalesSupported","global","Intl","IntlPolyfill","require","stateObj","useRef","forEach","hook","useState","elId","property","document","getElementById","themeOptions","createMuiTheme","eventName","callback","addEventListener","pageYOffset","d","r","documentElement","b","scrollLeft","scrollTop","width","height","Render","transferredControl","controlType","text","eval","Array","isArray","elpisTag","color","controlId","MyComponent","GlobalStyle","fontName","fontFamily","createGlobalStyle","fontPath","el","refsDict","current","objects","utils","persianUtils","theme","palette","primary","main","secondary","map","TransitionComponent","transitionType","threshold","result","animation","keyframes","ContainerDiv","zIndex","styled","div","BouncyDiv","animationTime","hideOnScroll","placeholderColor","overrides","MuiInput","input","CollapsibleAppBar","scroller","hide","options","setHide","lastScrollPos","handleScroll","useCallback","$","distance","offset","top","useEffect","removeEventListener","useHideOnScroll","appear","in","App","loadState","method","headers","JSON","stringify","fetch","config","url","then","rawRes","json","res","className","backgroundColor","position","left","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54a7b1ff.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function HideAppBar(props) {\n  return (\n    <AppBar\n      {...props}\n      style={props.style}>\n        {props.childrenOfAppBar}\n    </AppBar>\n  );\n}","\nimport React, { useState, useRef } from \"react\";\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Fab from '@material-ui/core/Fab';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport './App.css';\nimport { AppBar, Typography, BottomNavigation, BottomNavigationAction, List, ListItem, ListSubheader,\n     ListItemText, ListItemSecondaryAction, Paper, Divider, TextField, InputLabel, Input, FormHelperText,\n     FormControl, \n     FormControlLabel,\n     Icon,\n     InputBase,\n     Select,\n     MenuItem,\n     FilledInput,\n     OutlinedInput,\n     TablePagination,\n     Toolbar} from \"@material-ui/core\";\nimport { createGlobalStyle } from 'styled-components';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport Avatar from '@material-ui/core/Avatar';\nimport { fadeIn, fadeInUp, bounce, fadeInUpBig, fadeInDownBig, fadeInRightBig,\n         fadeInDown, bounceOutDown, bounceInUp, zoomIn, zoomOut } from 'react-animations'\nimport styled, { keyframes } from 'styled-components';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport PropTypes from 'prop-types';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CloseIcon from '@material-ui/icons/Close';\nimport HideAppBar from './HideAppBar';\nimport fadeOutUpBig from \"react-animations/lib/fade-out-up-big\";\nimport fadeOutDownBig from \"react-animations/lib/fade-out-down-big\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RssFeedIcon from '@material-ui/icons/RssFeed';\nimport {Button as FluentButton} from 'react-uwp/Button';\nimport {TransformCard} from 'react-uwp/TransformCard';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport MUIDataTable from \"mui-datatables\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DatePicker from 'material-ui/DatePicker';\nimport areIntlLocalesSupported from 'intl-locales-supported';\nimport persianUtils from 'material-ui-persian-date-picker-utils';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport TimePicker from 'material-ui/TimePicker';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EventIcon from '@material-ui/icons/Event';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport StarOutlineIcon from '@material-ui/icons/StarOutlined';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport CollapsibleAppBar from './CollapsibleAppBar';\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nfunction RTL(props) {\n  return (\n    <StylesProvider jss={jss}>\n      {props.children}\n    </StylesProvider>\n  );\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`action-tabpanel-${index}`}\n        aria-labelledby={`action-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n}\n\nconst SlideTransition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"left\" ref={ref} {...props} timeout={{enter: 500, exit: 500}} />;\n});\n\nlet Components = {\n    'FilterListIcon': FilterListIcon,\n    'PlayCircleOutlineIcon': PlayCircleOutlineIcon,\n    'MenuBookIcon': MenuBookIcon,\n    'StarOutlineIcon': StarOutlineIcon,\n    'PinDropIcon': PinDropIcon,\n    'TabPanel': TabPanel,\n    'SwipeableViews': SwipeableViews,\n    'Tabs': Tabs,\n    'Tab': Tab,\n    'ThemeProvider': ThemeProvider,\n    'PhoneIcon': PhoneIcon,\n    'EventIcon': EventIcon,\n    'AddIcon': AddIcon,\n    'TablePagination': TablePagination,\n    'MUIDataTable': MUIDataTable,\n    'AddAPhotoIcon': AddAPhotoIcon,\n    'OutlinedInput': OutlinedInput,\n    'FilledInput': FilledInput,\n    'DescriptionIcon': DescriptionIcon,\n    'AddCircleOutlineIcon': AddCircleOutlineIcon,\n    'PlaylistAddCheckIcon': PlaylistAddCheckIcon,\n    'PersonIcon': PersonIcon,\n    'SearchIcon': SearchIcon,\n    'AssignmentIcon': AssignmentIcon,\n    'HomeIcon': HomeIcon,\n    'NotificationsIcon': NotificationsIcon,\n    'SettingsIcon': SettingsIcon,\n    'Table': Table,\n    'TableBody': TableBody,\n    'TableCell': TableCell,\n    'TableContainer': TableContainer,\n    'TableHead': TableHead,\n    'TableRow': TableRow,\n    'Container': Container,\n    'Button': Button,\n    'Box': Box,\n    'Checkbox': Checkbox,\n    'ButtonGroup': ButtonGroup,\n    'Fab': Fab,\n    'Grid': Grid,\n    'GridList': GridList,\n    'GridListTile': GridListTile,\n    'AppBar': AppBar,\n    'Typography': Typography,\n    'EditIcon': EditIcon,\n    'ContactSupportIcon': ContactSupportIcon,\n    'BottomNavigation': BottomNavigation,\n    'BottomNavigationAction': BottomNavigationAction,\n    'FolderIcon': FolderIcon,\n    'RestoreIcon': RestoreIcon,\n    'FavoriteIcon': FavoriteIcon,\n    'LocationOnIcon': LocationOnIcon,\n    'LocalHospitalIcon': LocalHospitalIcon,\n    'Avatar': Avatar,\n    'ListItem': ListItem,\n    'List': List,\n    'ListSubheader': ListSubheader,\n    'ListItemText': ListItemText,\n    'DeleteIcon': DeleteIcon,\n    'ListItemSecondaryAction': ListItemSecondaryAction,\n    'IconButton': IconButton,\n    'Paper': Paper,\n    'Divider': Divider,\n    'CloseIcon': CloseIcon,\n    'AccountCircleIcon': AccountCircleIcon,\n    'TextField': TextField,\n    'VpnKeyIcon': VpnKeyIcon,\n    'InputLabel': InputLabel,\n    'Input': Input,\n    'FormHelperText': FormHelperText,\n    'FormControl': FormControl,\n    'FormControlLabel': FormControlLabel,\n    'Icon': Icon,\n    'ListAltIcon': ListAltIcon,\n    'DoneIcon': DoneIcon,\n    'ChatIcon': ChatIcon,\n    'React.Fragment': React.Fragment,\n    'InputBase': InputBase,\n    'RssFeedIcon': RssFeedIcon,\n    'Select': Select,\n    'MenuItem': MenuItem,\n    'Fluent.Button': FluentButton,\n    'Fluent.TransformCard': TransformCard,\n    'InfoOutlinedIcon': InfoOutlinedIcon,\n    'Dialog': Dialog\n}\n\nlet animations = {\n    'bounce': bounce,\n    'fadeIn': fadeIn,\n    'fadeInUp': fadeInUp,\n    'fadeInUpBig': fadeInUpBig,\n    'fadeInDownBig': fadeInDownBig,\n    'fadeInDown': fadeInDown,\n    'fadeInRightBig': fadeInRightBig,\n    'fadeOutUpBig': fadeOutUpBig,\n    'fadeOutDownBig': fadeOutDownBig,\n    'bounceOutDown': bounceOutDown,\n    'bounceInUp': bounceInUp,\n    'zoomIn': zoomIn,\n    'zoomOut': zoomOut\n}\n\nexport let appInstance = null;\n\nexport function setAppInstance(instance) {\n    appInstance = instance;\n}\n\nlet objCounter = 0;\nlet objDict = {};\nlet colorsDict = {};\n\nlet hooksList = [];\n\nfunction searchForHooks(control) {\n    if (control.properties !== undefined) {\n        for (let prop in control.properties) {\n            if (prop === 'id') {\n                idDict[control.properties[prop]] = control;\n            }\n            else if (prop === 'ref') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    window['refsDict'][variableName] = 'Empty';\n                }\n            }\n            else if ((typeof control.properties[prop]) === 'string') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\"))\n                        continue;\n                    else {\n                        hooksList.push(variableName);\n                    }\n                }\n            }\n        }\n    }\n\n    for (let child in control.children) {\n        searchForHooks(control.children[child]);\n    }\n}\n\nlet state = null;\nlet setState = null;\nlet idDict = {};\nlet DateTimeFormat;\n\nexport class AppBody extends React.Component {\n\n    bodyObj;\n\n    constructor(props) {\n        super(props);\n        this.bodyObj = props.body;\n    }\n\n    componentDidMount() {\n        window.loadedCount++;\n        if (window.loadedCount >= 2)\n            window.executeFunction(\"main\", {});\n    }\n    \n    render() {\n        return (\n            <AppInnerBody body={this.bodyObj}/>\n        );\n    }\n}\n\nexport function AppInnerBody(props) {\n    if (areIntlLocalesSupported(['fr', 'fa-IR'])) {\n        DateTimeFormat = global.Intl.DateTimeFormat;\n    } else {\n        const IntlPolyfill = require('intl');\n        DateTimeFormat = IntlPolyfill.DateTimeFormat;\n        require('intl/locale-data/jsonp/fr');\n        require('intl/locale-data/jsonp/fa-IR');\n    }\n    window['refsDict'] = {};\n    let stateObj = {};\n    if (state !== null) stateObj = state;\n    hooksList = [];\n    searchForHooks(props.body);\n    window['refsDict'] = useRef(window['refsDict']);\n    hooksList.forEach(hook => {\n        stateObj = {\n            ...stateObj,\n            [hook]: null\n        };\n    });\n    [state, setState] = useState(stateObj);\n    window['setState'] = setState;\n    window['state'] = state;\n    window['setStyle'] = (elId, property, value) => {\n        idDict[elId].style[property] = value;\n        document.getElementById(elId).style[property] = value;\n    };\n    window['createTheme'] = (themeOptions) => {\n        return createMuiTheme(themeOptions);\n    };\n    window['addEvent'] = (elId, eventName, callback) => {\n        document.getElementById(elId).addEventListener(eventName, function(){\n            callback();\n        }, false);\n    };\n    window['getScrollPos'] = function() {\n        if (window.pageYOffset != undefined) {\n            return window.pageYOffset;\n        } else {\n            var sx, sy, d = document,\n                r = d.documentElement,\n                b = d.body;\n            sx = r.scrollLeft || b.scrollLeft || 0;\n            sy = r.scrollTop || b.scrollTop || 0;\n            return sy;\n        }\n    };\n    return (\n        <div style={{width: '100%', height: '100%'}}>\n            <Render body={props.body}/>\n        </div>\n    );\n}\n\nexport function Render(props) {\n    let control = props.body;\n    let transferredControl = {};\n    if (control.controlType === 'Text') return control.text;\n    else if (control.controlType === 'br') return (<br/>);\n    else if (control.controlType === undefined) return;\n    if (control.properties !== undefined) {\n        for (let prop in control.properties) {\n            if ((typeof control.properties[prop]) === 'string') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\")) {\n                        control.properties[prop] = eval(variableName);\n                    }\n                }\n                else if (value.startsWith('_{') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    control.properties[prop] = eval(variableName);\n                }\n            }\n            else if ((typeof control.properties[prop]) === 'object' && !Array.isArray(control.properties[prop])) {\n                if (control.elpisTag === undefined) {\n                    control.elpisTag = objCounter + '';\n                }\n                objDict[control.elpisTag + '-' + prop] = Render({body: control.properties[prop]});\n                objCounter++;\n                control.properties[prop] = undefined;\n            }\n        }\n    }\n    if (control.style !== undefined) {\n        for (let prop in control.style) {\n            if ((typeof control.style[prop]) === 'string') {\n                let value = control.style[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\"))\n                        control.style[prop] = eval(variableName);\n                }\n                else if (value.startsWith('_{') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    control.properties[prop] = eval(variableName);\n                }\n            }\n        }\n    }\n    let color = undefined;\n    if (control.controlId !== undefined) {\n        color = colorsDict[control.controlId];\n        control.properties.color = 'secondary';\n    }\n    else if (control.properties !== undefined && control.properties.color !== undefined) {\n        color = control.properties.color;\n        control.controlId = objCounter + '';\n        colorsDict[objCounter + ''] = color;\n        objCounter++;\n        control.properties.color = 'secondary';\n    }\n    var MyComponent = Components[control.controlType];\n    if (MyComponent === undefined) {\n        MyComponent = control.controlType;\n    }\n    let GlobalStyle = undefined;\n    if (control.properties !== undefined && control.properties.fontName !== undefined) {\n        control.style = {\n            ...control.style,\n            fontFamily: control.properties.fontName\n        };\n        GlobalStyle = createGlobalStyle`\n            @font-face {\n                font-family: '${control.properties.fontName}';\n                src: url('${control.properties.fontPath}')\n            }`\n    }\n    for (let prop in control.properties) {\n        if ((typeof control.properties[prop]) === 'string' && control.properties[prop].startsWith('$')) {\n            if (prop === 'ref') {\n                transferredControl[prop] = (el) => {window.refsDict.current[control.properties[prop].substring(2, control.properties[prop].length - 1)] = el;};\n            } else {\n                transferredControl[prop] = state[control.properties[prop].substring(2, control.properties[prop].length - 1)];\n            }\n        }\n        else {\n            transferredControl[prop] = control.properties[prop];\n        }\n    }\n    let objects = {};\n    if (control.elpisTag !== undefined) {\n        for (let prop in objDict) {\n            if (prop.startsWith(control.elpisTag + '-')) {\n                objects[prop.substring((control.elpisTag + '-').length)] = objDict[prop];\n            }\n        }\n    }\n    if (control.controlType === 'DatePicker') {\n        return (<MuiThemeProvider>\n                    <DatePicker\n                        DateTimeFormat={DateTimeFormat}\n                        utils={persianUtils}\n                        {...transferredControl}\n                        style={control.style}\n                    />\n                </MuiThemeProvider>);\n    }\n    else if (control.controlType === 'TimePicker') {\n        return (<MuiThemeProvider>\n                    <TimePicker\n                        {...transferredControl}\n                        style={control.style}/>\n                </MuiThemeProvider>)\n    }\n    else if (control.controlType === 'ThemeProvider') {\n        let theme = createMuiTheme({\n            palette: {\n                ...(control.properties !== undefined && control.properties.primary !== undefined && {\n                    primary: {\n                        main: control.properties.primary\n                    }\n                }),\n                ...(control.properties !== undefined && control.properties.secondary !== undefined && {\n                    secondary: {\n                        main: control.properties.secondary\n                    }\n                })\n            }\n        });\n        return (<ThemeProvider theme={theme}>\n            {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n        </ThemeProvider>)\n    }\n    else if (control.controlType === 'Dialog') {\n        return (<Dialog {...transferredControl} style={control.style} \n                    TransitionComponent={control.properties.transitionType === 'Slide' ? SlideTransition : undefined}>\n            {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n        </Dialog>)\n    }\n    else if (control.controlType === 'CollapsibleAppBar') {\n        return (\n          <CollapsibleAppBar id=\"profileList\" threshold={400}>\n            {<AppBar {...transferredControl}\n                     style={control.style}>\n              {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n            </AppBar>}\n          </CollapsibleAppBar>);\n    }\n    let result = undefined;\n    if (control.properties !== undefined && control.properties.animation !== undefined) {\n        const animation = keyframes`${animations[transferredControl.animation]}`;\n        const ContainerDiv = control.style != undefined && control.style.zIndex !== undefined ? styled.div`\n            z-index: ${control.style.zIndex};\n            position: static;\n        ` : Box;\n        const BouncyDiv = styled.div`\n            animation: ${transferredControl.animationTime} forwards ${animation};\n        `;\n        if (control.properties['animation'].startsWith('${') && control.properties['animation'].endsWith('}')) {\n            if (control.controlType === 'AppBar' && control.properties !== undefined && control.properties.hideOnScroll === true) {\n                result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                 {(<HideAppBar\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {...objects})}\n                     childrenOfAppBar={\n                        control.children !== undefined ? control.children.map((child) => {\n                            return Render({body: child});\n                        }) : undefined\n                    }/>)}\n               </BouncyDiv></ContainerDiv>)\n            }\n            else {\n              result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                {<MyComponent\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    \n                    {...(control.elpisTag !== undefined && {...objects})}\n                > {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n                </MyComponent>}\n              </BouncyDiv></ContainerDiv>);\n            }\n        }\n        else {\n            if (control.controlType === 'AppBar' && control.properties !== undefined && control.properties.hideOnScroll === true) {\n                result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                    (<HideAppBar\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {...objects})}\n                     childrenOfAppBar={\n                        control.children !== undefined ? control.children.map((child) => {\n                            return Render({body: child});\n                        }) : undefined\n                    }/>)</BouncyDiv></ContainerDiv>);\n            }\n            else {\n              result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                {<MyComponent\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    \n                    {...(control.elpisTag !== undefined && {...objects})}\n                >{control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n                </MyComponent>}\n              </BouncyDiv></ContainerDiv>);\n            }\n        }\n    }\n    else {\n        if (control.controlType === 'AppBar' && control.properties !== undefined && control.properties.hideOnScroll === true) {\n            result = (<HideAppBar\n                style={control.style}\n                {...transferredControl}\n                ref={transferredControl.ref}\n                {...(control.elpisTag !== undefined && {...objects})}\n                 childrenOfAppBar={\n                    control.children !== undefined ? control.children.map((child) => {\n                        return Render({body: child});\n                    }) : undefined\n                }/>);\n        }\n        else {\n            result = \n              (<MyComponent\n                style={control.style}\n                {...transferredControl}\n                ref={transferredControl.ref}\n                \n                {...(control.elpisTag !== undefined && {...objects})}>\n                {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n                </MyComponent>);\n        }\n    }\n    if ((color === undefined || color === 'secondary') && (control.properties === undefined || control.properties.placeholderColor === undefined || control.properties.fontName === undefined)) return result;\n    let theme = null;\n    theme = createMuiTheme({\n        ...(control.properties.placeholderColor !== undefined && {\n            overrides: {\n                MuiInput: {\n                  input: {\n                    \"&::placeholder\": {\n                      color: control.properties.placeholderColor\n                    }\n                  }\n                }\n            }\n        }),\n        ...(color !== undefined && color !== 'secondary' && {palette: {\n            secondary: {\n                main: color\n            }\n        }})\n    });\n    if (GlobalStyle === undefined) {\n        result = <ThemeProvider theme={theme}>\n                {result}\n            </ThemeProvider>\n    }\n    else {\n        result = <ThemeProvider theme={theme}>\n                    <div>\n                        <GlobalStyle/>\n                        {result}\n                    </div>\n                </ThemeProvider>\n    }\n    return result;\n}","import React from \"react\";\nimport { Slide } from \"@material-ui/core\";\nimport $ from \"jquery\";\n\nconst useHideOnScroll = options => {\n  const { threshold, scroller, id } = options;\n\n  const [hide, setHide] = React.useState(false);\n\n  let lastScrollPos = undefined;\n\n  const handleScroll = React.useCallback(() => {\n\n    var scrollTop   = $(window).scrollTop(),\n    elementOffset   = $('#' + id + \"-bottom-side\").offset().top,\n    distance        = (elementOffset - scrollTop);\n    \n    if (lastScrollPos === undefined) {\n      lastScrollPos = distance;\n      return;\n    }\n\n    if (lastScrollPos > distance) {\n      setHide(true);\n    }\n    else if (lastScrollPos < distance) {\n      setHide(false);\n    }\n    lastScrollPos = distance;\n  }, [scroller, threshold, id]);\n\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll, true);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return hide;\n};\n\nexport default function CollapsibleAppBar(props) {\n  const { children, threshold, scroller, id, ...other } = props;\n\n  const hide = useHideOnScroll({ threshold, scroller, id });\n\n  return (\n    <div>\n      <Slide appear={false} direction=\"down\" in={!hide} {...other}>\n        {children}\n      </Slide>\n      <div id={id + \"-bottom-side\"} style={{width: \"100%\", height: 4}}/>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport config from './config.json'\nimport {setAppInstance, AppBody} from './Renderer';\nimport { Theme as UWPThemeProvider, getTheme } from \"react-uwp/Theme\";\n\nexport class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bodyObj: null,\n      loadState: 'loading'\n    };\n    setAppInstance(this);\n    window['app'] = this;\n    const options = {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"token\": \"...\"\n      })\n    };\n    fetch(config.url, options)\n      .then(rawRes => rawRes.json())\n      .then(res => {\n        if (res !== null) {\n          this.setState({bodyObj: res});\n        }\n      });\n  }\n\n  render() {\n    let result = (\n      <div className=\"App\" style={{\n        width: '100%',\n        height: '100vh'\n      }}>\n        {this.state.bodyObj === null ? null : <AppBody body={this.state.bodyObj}/>}\n        {this.state.loadState !== 'loading' ? null : <div style={{backgroundColor: '#fff', zIndex: 1000000, position: 'fixed', left: 0, top: 0, width: '100%', height: '100%'}}></div>}\n      </div>\n    );\n    return result;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}