{"version":3,"sources":["HideAppBar.js","Renderer.js","DraggbleDialog.js","CollapsibleAppBar.js","TransferList.js","App.js","serviceWorker.js","index.js"],"names":["HideAppBar","props","style","childrenOfAppBar","jss","create","plugins","jssPreset","rtl","RTL","children","TabPanel","value","index","other","component","role","hidden","id","aria-labelledby","p","SlideTransition","React","forwardRef","ref","direction","timeout","enter","exit","SlideUpTransition","Components","DraggableDialog","Draggable","DialogActions","DialogContent","DialogContentText","DialogTitle","TransferList","CallEndIcon","DoneAllIcon","VideocamIcon","PhoneIcon","MicIcon","InsertEmoticonIcon","ArrowBackIcon","FilterListIcon","PlayCircleOutlineIcon","MenuBookIcon","StarOutlineIcon","PinDropIcon","SwipeableViews","Tabs","Tab","ThemeProvider","EventIcon","AddIcon","TablePagination","MUIDataTable","AddAPhotoIcon","OutlinedInput","FilledInput","DescriptionIcon","AddCircleOutlineIcon","PlaylistAddCheckIcon","PersonIcon","SearchIcon","AssignmentIcon","HomeIcon","NotificationsIcon","SettingsIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Container","Button","Box","Checkbox","ButtonGroup","Fab","Grid","GridList","GridListTile","AppBar","Typography","EditIcon","ContactSupportIcon","BottomNavigation","BottomNavigationAction","FolderIcon","RestoreIcon","FavoriteIcon","LocationOnIcon","LocalHospitalIcon","Avatar","ListItem","List","ListSubheader","ListItemText","DeleteIcon","ListItemSecondaryAction","IconButton","Paper","Divider","CloseIcon","AccountCircleIcon","TextField","VpnKeyIcon","InputLabel","Input","FormHelperText","FormControl","FormControlLabel","Icon","ListAltIcon","DoneIcon","ChatIcon","Fragment","InputBase","RssFeedIcon","Select","MenuItem","FluentButton","TransformCard","InfoOutlinedIcon","Dialog","animations","bounce","fadeIn","fadeInUp","fadeInUpBig","fadeInDownBig","fadeInDown","fadeInRightBig","fadeOutUpBig","fadeOutDownBig","bounceOutDown","bounceInUp","zoomIn","zoomOut","appInstance","setAppInstance","instance","objCounter","objDict","colorsDict","hooksList","searchForHooks","control","undefined","properties","prop","idDict","startsWith","endsWith","variableName","substring","length","window","trim","push","child","state","setState","DateTimeFormat","AppBody","bodyObj","body","loadedCount","executeFunction","AppInnerBody","this","Component","areIntlLocalesSupported","global","Intl","IntlPolyfill","require","stateObj","useRef","forEach","hook","useState","elId","property","document","getElementById","themeOptions","createMuiTheme","eventName","callback","addEventListener","pageYOffset","d","r","documentElement","b","scrollLeft","scrollTop","width","height","Render","transferredControl","controlType","text","eval","Array","isArray","elpisTag","color","controlId","MyComponent","GlobalStyle","fontName","fontFamily","createGlobalStyle","fontPath","el","refsDict","current","objects","utils","persianUtils","theme","palette","primary","main","secondary","map","TransitionComponent","transitionType","threshold","result","animation","keyframes","ContainerDiv","zIndex","styled","div","BouncyDiv","animationTime","hideOnScroll","placeholderColor","overrides","MuiInput","input","PaperComponent","props2","bounds","left","onStart","onStop","axis","handle","cancel","position","top","cursor","CollapsibleAppBar","scroller","hide","options","setHide","lastScrollPos","handleScroll","useCallback","$","distance","offset","useEffect","removeEventListener","useHideOnScroll","appear","in","useStyles","makeStyles","root","margin","paper","marginLeft","marginRight","display","innerWidth","button","spacing","not","a","filter","indexOf","intersection","classes","checked","setChecked","leftItems","setLeft","rightItems","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","splice","customList","items","title","overflow","dense","fontSize","textAlign","labelId","key","onClick","tabIndex","disableRipple","inputProps","marginTop","className","container","justify","alignItems","item","leftTitle","orientation","flexItem","rightTitle","transform","variant","size","concat","disabled","aria-label","App","loadState","method","headers","JSON","stringify","fetch","config","url","then","rawRes","json","res","backgroundColor","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2c16920.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function HideAppBar(props) {\n  return (\n    <AppBar\n      {...props}\n      style={props.style}>\n        {props.childrenOfAppBar}\n    </AppBar>\n  );\n}","\nimport React, { useState, useRef } from \"react\";\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Fab from '@material-ui/core/Fab';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport './App.css';\nimport { AppBar, Typography, BottomNavigation, BottomNavigationAction, List, ListItem, ListSubheader,\n     ListItemText, ListItemSecondaryAction, Paper, Divider, TextField, InputLabel, Input, FormHelperText,\n     FormControl, \n     FormControlLabel,\n     Icon,\n     InputBase,\n     Select,\n     MenuItem,\n     FilledInput,\n     OutlinedInput,\n     TablePagination,\n     Toolbar} from \"@material-ui/core\";\nimport { createGlobalStyle } from 'styled-components';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport Avatar from '@material-ui/core/Avatar';\nimport { fadeIn, fadeInUp, bounce, fadeInUpBig, fadeInDownBig, fadeInRightBig,\n         fadeInDown, bounceOutDown, bounceInUp, zoomIn, zoomOut } from 'react-animations'\nimport styled, { keyframes } from 'styled-components';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport PropTypes from 'prop-types';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CloseIcon from '@material-ui/icons/Close';\nimport HideAppBar from './HideAppBar';\nimport fadeOutUpBig from \"react-animations/lib/fade-out-up-big\";\nimport fadeOutDownBig from \"react-animations/lib/fade-out-down-big\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RssFeedIcon from '@material-ui/icons/RssFeed';\nimport {Button as FluentButton} from 'react-uwp/Button';\nimport {TransformCard} from 'react-uwp/TransformCard';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport MUIDataTable from \"mui-datatables\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DatePicker from 'material-ui/DatePicker';\nimport areIntlLocalesSupported from 'intl-locales-supported';\nimport persianUtils from 'material-ui-persian-date-picker-utils';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport TimePicker from 'material-ui/TimePicker';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EventIcon from '@material-ui/icons/Event';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport StarOutlineIcon from '@material-ui/icons/StarOutlined';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport CollapsibleAppBar from './CollapsibleAppBar';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport CallEndIcon from '@material-ui/icons/CallEnd';\nimport TransferList from './TransferList';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport DraggableDialog from './DraggbleDialog';\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\nfunction RTL(props) {\n  return (\n    <StylesProvider jss={jss}>\n      {props.children}\n    </StylesProvider>\n  );\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`action-tabpanel-${index}`}\n        aria-labelledby={`action-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n}\n\nconst SlideTransition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"left\" ref={ref} {...props} timeout={{enter: 500, exit: 500}} />;\n});\n\nconst SlideUpTransition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} timeout={{enter: 500, exit: 500}} />;\n});\n\nlet Components = {\n    'DraggableDialog': DraggableDialog,\n    'Draggable': Draggable,\n    'DialogActions': DialogActions,\n    'DialogContent': DialogContent,\n    'DialogContentText': DialogContentText,\n    'DialogTitle': DialogTitle,\n    'TransferList': TransferList,\n    'CallEndIcon': CallEndIcon,\n    'DoneAllIcon': DoneAllIcon,\n    'VideocamIcon': VideocamIcon,\n    'PhoneIcon': PhoneIcon,\n    'MicIcon': MicIcon,\n    'InsertEmoticonIcon': InsertEmoticonIcon,\n    'ArrowBackIcon': ArrowBackIcon,\n    'FilterListIcon': FilterListIcon,\n    'PlayCircleOutlineIcon': PlayCircleOutlineIcon,\n    'MenuBookIcon': MenuBookIcon,\n    'StarOutlineIcon': StarOutlineIcon,\n    'PinDropIcon': PinDropIcon,\n    'TabPanel': TabPanel,\n    'SwipeableViews': SwipeableViews,\n    'Tabs': Tabs,\n    'Tab': Tab,\n    'ThemeProvider': ThemeProvider,\n    'PhoneIcon': PhoneIcon,\n    'EventIcon': EventIcon,\n    'AddIcon': AddIcon,\n    'TablePagination': TablePagination,\n    'MUIDataTable': MUIDataTable,\n    'AddAPhotoIcon': AddAPhotoIcon,\n    'OutlinedInput': OutlinedInput,\n    'FilledInput': FilledInput,\n    'DescriptionIcon': DescriptionIcon,\n    'AddCircleOutlineIcon': AddCircleOutlineIcon,\n    'PlaylistAddCheckIcon': PlaylistAddCheckIcon,\n    'PersonIcon': PersonIcon,\n    'SearchIcon': SearchIcon,\n    'AssignmentIcon': AssignmentIcon,\n    'HomeIcon': HomeIcon,\n    'NotificationsIcon': NotificationsIcon,\n    'SettingsIcon': SettingsIcon,\n    'Table': Table,\n    'TableBody': TableBody,\n    'TableCell': TableCell,\n    'TableContainer': TableContainer,\n    'TableHead': TableHead,\n    'TableRow': TableRow,\n    'Container': Container,\n    'Button': Button,\n    'Box': Box,\n    'Checkbox': Checkbox,\n    'ButtonGroup': ButtonGroup,\n    'Fab': Fab,\n    'Grid': Grid,\n    'GridList': GridList,\n    'GridListTile': GridListTile,\n    'AppBar': AppBar,\n    'Typography': Typography,\n    'EditIcon': EditIcon,\n    'ContactSupportIcon': ContactSupportIcon,\n    'BottomNavigation': BottomNavigation,\n    'BottomNavigationAction': BottomNavigationAction,\n    'FolderIcon': FolderIcon,\n    'RestoreIcon': RestoreIcon,\n    'FavoriteIcon': FavoriteIcon,\n    'LocationOnIcon': LocationOnIcon,\n    'LocalHospitalIcon': LocalHospitalIcon,\n    'Avatar': Avatar,\n    'ListItem': ListItem,\n    'List': List,\n    'ListSubheader': ListSubheader,\n    'ListItemText': ListItemText,\n    'DeleteIcon': DeleteIcon,\n    'ListItemSecondaryAction': ListItemSecondaryAction,\n    'IconButton': IconButton,\n    'Paper': Paper,\n    'Divider': Divider,\n    'CloseIcon': CloseIcon,\n    'AccountCircleIcon': AccountCircleIcon,\n    'TextField': TextField,\n    'VpnKeyIcon': VpnKeyIcon,\n    'InputLabel': InputLabel,\n    'Input': Input,\n    'FormHelperText': FormHelperText,\n    'FormControl': FormControl,\n    'FormControlLabel': FormControlLabel,\n    'Icon': Icon,\n    'ListAltIcon': ListAltIcon,\n    'DoneIcon': DoneIcon,\n    'ChatIcon': ChatIcon,\n    'React.Fragment': React.Fragment,\n    'InputBase': InputBase,\n    'RssFeedIcon': RssFeedIcon,\n    'Select': Select,\n    'MenuItem': MenuItem,\n    'Fluent.Button': FluentButton,\n    'Fluent.TransformCard': TransformCard,\n    'InfoOutlinedIcon': InfoOutlinedIcon,\n    'Dialog': Dialog\n}\n\nlet animations = {\n    'bounce': bounce,\n    'fadeIn': fadeIn,\n    'fadeInUp': fadeInUp,\n    'fadeInUpBig': fadeInUpBig,\n    'fadeInDownBig': fadeInDownBig,\n    'fadeInDown': fadeInDown,\n    'fadeInRightBig': fadeInRightBig,\n    'fadeOutUpBig': fadeOutUpBig,\n    'fadeOutDownBig': fadeOutDownBig,\n    'bounceOutDown': bounceOutDown,\n    'bounceInUp': bounceInUp,\n    'zoomIn': zoomIn,\n    'zoomOut': zoomOut\n}\n\nexport let appInstance = null;\n\nexport function setAppInstance(instance) {\n    appInstance = instance;\n}\n\nlet objCounter = 0;\nlet objDict = {};\nlet colorsDict = {};\n\nlet hooksList = [];\n\nfunction searchForHooks(control) {\n    if (control.properties !== undefined) {\n        for (let prop in control.properties) {\n            if (prop === 'id') {\n                idDict[control.properties[prop]] = control;\n            }\n            else if (prop === 'ref') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    window['refsDict'][variableName] = 'Empty';\n                }\n            }\n            else if ((typeof control.properties[prop]) === 'string') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\"))\n                        continue;\n                    else {\n                        hooksList.push(variableName);\n                    }\n                }\n            }\n        }\n    }\n\n    for (let child in control.children) {\n        searchForHooks(control.children[child]);\n    }\n}\n\nlet state = null;\nlet setState = null;\nlet idDict = {};\nlet DateTimeFormat;\n\nexport class AppBody extends React.Component {\n\n    bodyObj;\n\n    constructor(props) {\n        super(props);\n        this.bodyObj = props.body;\n    }\n\n    componentDidMount() {\n        window.loadedCount++;\n        if (window.loadedCount >= 2)\n            window.executeFunction(\"main\", {});\n    }\n    \n    render() {\n        return (\n            <AppInnerBody body={this.bodyObj}/>\n        );\n    }\n}\n\nexport function AppInnerBody(props) {\n    if (areIntlLocalesSupported(['fr', 'fa-IR'])) {\n        DateTimeFormat = global.Intl.DateTimeFormat;\n    } else {\n        const IntlPolyfill = require('intl');\n        DateTimeFormat = IntlPolyfill.DateTimeFormat;\n        require('intl/locale-data/jsonp/fr');\n        require('intl/locale-data/jsonp/fa-IR');\n    }\n    window['refsDict'] = {};\n    let stateObj = {};\n    if (state !== null) stateObj = state;\n    hooksList = [];\n    searchForHooks(props.body);\n    window['refsDict'] = useRef(window['refsDict']);\n    hooksList.forEach(hook => {\n        stateObj = {\n            ...stateObj,\n            [hook]: null\n        };\n    });\n    [state, setState] = useState(stateObj);\n    window['setState'] = setState;\n    window['state'] = state;\n    window['setStyle'] = (elId, property, value) => {\n        idDict[elId].style[property] = value;\n        document.getElementById(elId).style[property] = value;\n    };\n    window['createTheme'] = (themeOptions) => {\n        return createMuiTheme(themeOptions);\n    };\n    window['addEvent'] = (elId, eventName, callback) => {\n        document.getElementById(elId).addEventListener(eventName, function(){\n            callback();\n        }, false);\n    };\n    window['getScrollPos'] = function() {\n        if (window.pageYOffset != undefined) {\n            return window.pageYOffset;\n        } else {\n            var sx, sy, d = document,\n                r = d.documentElement,\n                b = d.body;\n            sx = r.scrollLeft || b.scrollLeft || 0;\n            sy = r.scrollTop || b.scrollTop || 0;\n            return sy;\n        }\n    };\n    return (\n        <div style={{width: '100%', height: '100%'}}>\n            <Render body={props.body}/>\n        </div>\n    );\n}\n\nexport function Render(props) {\n    let control = props.body;\n    let transferredControl = {};\n    if (control.controlType === 'Text') return control.text;\n    else if (control.controlType === 'br') return (<br/>);\n    else if (control.controlType === undefined) return;\n    if (control.properties !== undefined) {\n        for (let prop in control.properties) {\n            if ((typeof control.properties[prop]) === 'string') {\n                let value = control.properties[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\")) {\n                        control.properties[prop] = eval(variableName);\n                    }\n                }\n                else if (value.startsWith('_{') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    control.properties[prop] = eval(variableName);\n                }\n            }\n            else if ((typeof control.properties[prop]) === 'object' && !Array.isArray(control.properties[prop])) {\n                if (control.elpisTag === undefined) {\n                    control.elpisTag = objCounter + '';\n                }\n                objDict[control.elpisTag + '-' + prop] = Render({body: control.properties[prop]});\n                objCounter++;\n                control.properties[prop] = undefined;\n            }\n        }\n    }\n    if (control.style !== undefined) {\n        for (let prop in control.style) {\n            if ((typeof control.style[prop]) === 'string') {\n                let value = control.style[prop];\n                if (value.startsWith('${') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    if (variableName.trim().startsWith(\"(\"))\n                        control.style[prop] = eval(variableName);\n                }\n                else if (value.startsWith('_{') && value.endsWith('}')) {\n                    let variableName = value.substring(2, value.length - 1);\n                    control.properties[prop] = eval(variableName);\n                }\n            }\n        }\n    }\n    let color = undefined;\n    if (control.controlId !== undefined) {\n        color = colorsDict[control.controlId];\n        control.properties.color = 'secondary';\n    }\n    else if (control.properties !== undefined && control.properties.color !== undefined) {\n        color = control.properties.color;\n        control.controlId = objCounter + '';\n        colorsDict[objCounter + ''] = color;\n        objCounter++;\n        control.properties.color = 'secondary';\n    }\n    var MyComponent = Components[control.controlType];\n    if (MyComponent === undefined) {\n        MyComponent = control.controlType;\n    }\n    let GlobalStyle = undefined;\n    if (control.properties !== undefined && control.properties.fontName !== undefined) {\n        control.style = {\n            ...control.style,\n            fontFamily: control.properties.fontName\n        };\n        GlobalStyle = createGlobalStyle`\n            @font-face {\n                font-family: '${control.properties.fontName}';\n                src: url('${control.properties.fontPath}')\n            }`\n    }\n    for (let prop in control.properties) {\n        if ((typeof control.properties[prop]) === 'string' && control.properties[prop].startsWith('$')) {\n            if (prop === 'ref') {\n                transferredControl[prop] = (el) => {window.refsDict.current[control.properties[prop].substring(2, control.properties[prop].length - 1)] = el;};\n            } else {\n                transferredControl[prop] = state[control.properties[prop].substring(2, control.properties[prop].length - 1)];\n            }\n        }\n        else {\n            transferredControl[prop] = control.properties[prop];\n        }\n    }\n    let objects = {};\n    if (control.elpisTag !== undefined) {\n        for (let prop in objDict) {\n            if (prop.startsWith(control.elpisTag + '-')) {\n                objects[prop.substring((control.elpisTag + '-').length)] = objDict[prop];\n            }\n        }\n    }\n    if (control.controlType === 'DatePicker') {\n        return (<MuiThemeProvider>\n                    <DatePicker\n                        DateTimeFormat={DateTimeFormat}\n                        utils={persianUtils}\n                        {...transferredControl}\n                        style={control.style}\n                    />\n                </MuiThemeProvider>);\n    }\n    else if (control.controlType === 'TimePicker') {\n        return (<MuiThemeProvider>\n                    <TimePicker\n                        {...transferredControl}\n                        style={control.style}/>\n                </MuiThemeProvider>)\n    }\n    else if (control.controlType === 'ThemeProvider') {\n        let theme = createMuiTheme({\n            palette: {\n                ...(control.properties !== undefined && control.properties.primary !== undefined && {\n                    primary: {\n                        main: control.properties.primary\n                    }\n                }),\n                ...(control.properties !== undefined && control.properties.secondary !== undefined && {\n                    secondary: {\n                        main: control.properties.secondary\n                    }\n                })\n            }\n        });\n        return (<ThemeProvider theme={theme}>\n            {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n        </ThemeProvider>)\n    }\n    else if (control.controlType === 'Dialog') {\n        return (<Dialog {...transferredControl} style={control.style} \n                    TransitionComponent={control.properties.transitionType === 'Slide' ?\n                     SlideTransition :\n                     control.properties.transitionType === 'SlideUp' ?\n                     SlideUpTransition :\n                    undefined}>\n            {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n        </Dialog>)\n    }\n    else if (control.controlType === 'DraggableDialog') {\n        return (<DraggableDialog\n                        transferredControl={transferredControl} \n                        style={control.style} \n                        transitionType={control.properties.transitionType}>\n                    {control.children !== undefined ? control.children.map((child) => {\n                        return Render({body: child});\n                    }) : undefined}\n        </DraggableDialog>)\n    }\n    else if (control.controlType === 'CollapsibleAppBar') {\n        return (\n          <CollapsibleAppBar id=\"profileList\" threshold={400}>\n            {<AppBar {...transferredControl}\n                     style={control.style}>\n              {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n            </AppBar>}\n          </CollapsibleAppBar>);\n    }\n    let result = undefined;\n    if (control.properties !== undefined && control.properties.animation !== undefined) {\n        const animation = keyframes`${animations[transferredControl.animation]}`;\n        const ContainerDiv = control.style != undefined && control.style.zIndex !== undefined ? styled.div`\n            z-index: ${control.style.zIndex};\n            position: static;\n        ` : Box;\n        const BouncyDiv = styled.div`\n            animation: ${transferredControl.animationTime} forwards ${animation};\n        `;\n        if (control.properties['animation'].startsWith('${') && control.properties['animation'].endsWith('}')) {\n            if (control.controlType === 'AppBar' && control.properties !== undefined && control.properties.hideOnScroll === true) {\n                result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                 {(<HideAppBar\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {...objects})}\n                     childrenOfAppBar={\n                        control.children !== undefined ? control.children.map((child) => {\n                            return Render({body: child});\n                        }) : undefined\n                    }/>)}\n               </BouncyDiv></ContainerDiv>)\n            }\n            else {\n              result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                {<MyComponent\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    \n                    {...(control.elpisTag !== undefined && {...objects})}\n                > {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n                </MyComponent>}\n              </BouncyDiv></ContainerDiv>);\n            }\n        }\n        else {\n            if (control.controlType === 'AppBar' && control.properties !== undefined && control.properties.hideOnScroll === true) {\n                result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                    (<HideAppBar\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    {...(control.elpisTag !== undefined && {...objects})}\n                     childrenOfAppBar={\n                        control.children !== undefined ? control.children.map((child) => {\n                            return Render({body: child});\n                        }) : undefined\n                    }/>)</BouncyDiv></ContainerDiv>);\n            }\n            else {\n              result = (<ContainerDiv><BouncyDiv id={control.properties.id + \"-anim\"}>\n                {<MyComponent\n                    style={control.style}\n                    {...transferredControl}\n                    ref={transferredControl.ref}\n                    \n                    {...(control.elpisTag !== undefined && {...objects})}\n                >{control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n                </MyComponent>}\n              </BouncyDiv></ContainerDiv>);\n            }\n        }\n    }\n    else {\n        if (control.controlType === 'AppBar' && control.properties !== undefined && control.properties.hideOnScroll === true) {\n            result = (<HideAppBar\n                style={control.style}\n                {...transferredControl}\n                ref={transferredControl.ref}\n                {...(control.elpisTag !== undefined && {...objects})}\n                 childrenOfAppBar={\n                    control.children !== undefined ? control.children.map((child) => {\n                        return Render({body: child});\n                    }) : undefined\n                }/>);\n        }\n        else {\n            result = \n              (<MyComponent\n                style={control.style}\n                {...transferredControl}\n                ref={transferredControl.ref}\n                \n                {...(control.elpisTag !== undefined && {...objects})}>\n                {control.children !== undefined ? control.children.map((child) => {\n                    return Render({body: child});\n                }) : undefined}\n                </MyComponent>);\n        }\n    }\n    if ((color === undefined || color === 'secondary') && (control.properties === undefined || control.properties.placeholderColor === undefined || control.properties.fontName === undefined)) return result;\n    let theme = null;\n    theme = createMuiTheme({\n        ...(control.properties.placeholderColor !== undefined && {\n            overrides: {\n                MuiInput: {\n                  input: {\n                    \"&::placeholder\": {\n                      color: control.properties.placeholderColor\n                    }\n                  }\n                }\n            }\n        }),\n        ...(color !== undefined && color !== 'secondary' && {palette: {\n            secondary: {\n                main: color\n            }\n        }})\n    });\n    if (GlobalStyle === undefined) {\n        result = <ThemeProvider theme={theme}>\n                {result}\n            </ThemeProvider>\n    }\n    else {\n        result = <ThemeProvider theme={theme}>\n                    <div>\n                        <GlobalStyle/>\n                        {result}\n                    </div>\n                </ThemeProvider>\n    }\n    return result;\n}","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\nimport Slide from '@material-ui/core/Slide';\n\nconst SlideTransition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"left\" ref={ref} {...props} timeout={{enter: 500, exit: 500}} />;\n});\n\nconst SlideUpTransition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} timeout={{enter: 500, exit: 500}} />;\n});\n\nexport default function DraggableDialog(props) {\n\n  function PaperComponent(props2) {\n    return (\n      <Draggable bounds={{left: 0}} onStart={props.transferredControl.onStart} onStop={props.transferredControl.onStop} axis=\"x\" handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n        <Paper {...props2} />\n      </Draggable>\n    );\n  }\n\n  return (\n      <Dialog\n        {...props.transferredControl}\n        style={props.style} \n        TransitionComponent={props.transitionType === 'Slide' ?\n                     SlideTransition :\n                     props.transitionType === 'SlideUp' ?\n                     SlideUpTransition :\n                    undefined}\n        PaperComponent={PaperComponent}>\n          {props.children}\n          <DialogTitle style={{position: \"absolute\", left: 0, top: 0, width: 32, height: \"100%\", cursor: 'move' }} id=\"draggable-dialog-title\">\n          </DialogTitle>\n      </Dialog>\n  );\n}","import React from \"react\";\nimport { Slide } from \"@material-ui/core\";\nimport $ from \"jquery\";\n\nconst useHideOnScroll = options => {\n  const { threshold, scroller, id } = options;\n\n  const [hide, setHide] = React.useState(false);\n\n  let lastScrollPos = undefined;\n\n  const handleScroll = React.useCallback(() => {\n\n    var myEle = document.getElementById(id + \"-bottom-side\");\n    if (myEle) {\n      var scrollTop   = $(window).scrollTop(),\n      elementOffset   = $('#' + id + \"-bottom-side\").offset().top,\n      distance        = (elementOffset - scrollTop);\n      if (lastScrollPos === undefined) {\n        lastScrollPos = distance;\n        return;\n      }\n      if (lastScrollPos > distance) {\n        setHide(true);\n      }\n      else if (lastScrollPos < distance) {\n        setHide(false);\n      }\n      lastScrollPos = distance;\n    }\n  }, [scroller, threshold, id]);\n\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll, true);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return hide;\n};\n\nexport default function CollapsibleAppBar(props) {\n  const { children, threshold, scroller, id, ...other } = props;\n\n  const hide = useHideOnScroll({ threshold, scroller, id });\n\n  return (\n    <div>\n      <Slide appear={false} direction=\"down\" in={!hide} {...other}>\n        {children}\n      </Slide>\n      <div id={id + \"-bottom-side\"} style={{width: \"100%\", height: 4}}/>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  paper: {\n    marginLeft: 16,\n    marginRight: 16,\n    display: 'flex',\n    width: window.innerWidth - 32\n  },\n  button: {\n    margin: theme.spacing(0.5, 0.5),\n  },\n}));\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nexport default function TransferList(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState(props.leftItems);\n  const [right, setRight] = React.useState(props.rightItems);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = (items, title) => (\n      <List style={{overflow: \"auto\", height: 230}} dense component=\"div\" role=\"list\">\n        <div style={{fontSize: 14, width: \"100%\", textAlign: \"center\"}}>{title}</div>\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={value} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n  );\n\n  return (\n    <div style={{marginTop: 32}}>\n      <Divider />\n      <div className={classes.paper}>\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n          <Grid item>{customList(left, props.leftTitle)}</Grid>\n          <Divider orientation=\"vertical\" flexItem />\n          <Grid item>{customList(right, props.rightTitle)}</Grid>\n        </Grid>\n      </div>\n      <Divider />\n      <div style={{display: 'flex', position: \"absolute\", left: \"50%\", transform: \"translate(-50%, +50%)\"}}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleAllRight}\n            disabled={left.length === 0}\n            aria-label=\"move all right\"\n          >\n            ≫\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleAllLeft}\n            disabled={right.length === 0}\n            aria-label=\"move all left\"\n          >\n            ≪\n          </Button>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './App.css';\nimport config from './config.json'\nimport {setAppInstance, AppBody} from './Renderer';\nimport { Theme as UWPThemeProvider, getTheme } from \"react-uwp/Theme\";\n\nexport class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bodyObj: null,\n      loadState: 'loading'\n    };\n    setAppInstance(this);\n    window['app'] = this;\n    const options = {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"token\": \"...\"\n      })\n    };\n    fetch(config.url, options)\n      .then(rawRes => rawRes.json())\n      .then(res => {\n        if (res !== null) {\n          this.setState({bodyObj: res});\n        }\n      });\n  }\n\n  render() {\n    let result = (\n      <div className=\"App\" style={{\n        width: '100%',\n        height: '100vh'\n      }}>\n        {this.state.bodyObj === null ? null : <AppBody body={this.state.bodyObj}/>}\n        {this.state.loadState !== 'loading' ? null : <div style={{backgroundColor: '#fff', zIndex: 1000000, position: 'fixed', left: 0, top: 0, width: '100%', height: '100%'}}></div>}\n      </div>\n    );\n    return result;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}