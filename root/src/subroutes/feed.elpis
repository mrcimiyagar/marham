
use "components/textfield.elpis"
use "subroutes/post.elpis"

@ClientSide
define function loadFeed
  runJS(jsCode: "
      if (page.canTransit) {
        page.canTransit = false;
        page.setState({...page.state, feedOpen: true, feedTabValue: 1});
        setTimeout(() => {page.canTransit = true;}, 250);
      }
    ")

@ClientSide
define function hideFeedAndShowHome
  runJS(jsCode: "
    if (page.canTransit) {
      page.canTransit = false;
      page.setState({...page.state, feedOpen: false});
      setTimeout(() => {
        page.canTransit = true;
      }, 250);
    }
  ")

feedItem = ({
              controlType: "div",
              children: [
            {
              controlType: "ListItem",
              properties: {
                onClick: "${() => {page.loadPost();}}",
                button: true 
              },
              style: {
                marginRight: -16
              },
              children: [
                {
                  controlType: "ListItemAvatar",
                  children: [
                    <img style={{width: 128, height: 96}} src={"/webapp/res/profile-header.jpg"}/>
                  ]
                },
                {
                  controlType: "ListItemText",
                  properties: {
                    primary: <div><span>"ویروس کرونا"</span><br/><span style={{color: "#a15", fontSize: 14}}>"بیماری"</span></div>,
                    secondary: "هر آنچه در عصر حاضر در مورد کرونا باید بدانیم ..."
                  },
                  style: {
                    width: "auto",
                    textAlign: "right",
                    marginRight: 16,
                    marginLeft: 16
                  }
                },
                {
                  controlType: "div",
                  style: {
                    marginLeft: -32
                  },
                  children: [
                    {
                      controlType: "IconButton",
                      children: [
                        {
                          controlType: "StarOutlineIcon"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              controlType: "Divider",
              properties: {
                component: "li"
              }
            }
          ]
        })

define function FeedItem with params xs, id
  return ({
              controlType: "Grid",
              style: {
                height: 110
              },
              properties: {
                onClick: "${() => {}}",
                item: true,
                xs: xs
              },
              children: [
                {
                  controlType: "div",
                  style: {
                    borderRadius: 1,
                    width: "calc(100% - 4px)",
                    height: "calc(100% - 4px)",
                    position: "relative",
                    margin: 2
                  },
                  children: [
                    {
                      controlType: "img",
                      style: {
                        width: "100%",
                        height: "100%"
                      },
                      properties: {
                        src: "/webapp/res/profile-header.jpg"
                      }
                    }
                  ]
                }
              ]
            })

feedPage = (
    <Dialog id="feedContainer" fullScreen open={"${feedOpen}"} transitionType={"Slide"}>
      {
        controlType: "Box",
        style: {
          width: "100%",
          height: "100%",
          direction: "ltr"
        },
        children: [
          <CollapsibleAppBar style={{width: "100%", height: "auto", backgroundColor: "#07d"}} id={"feedGap"} color={"#07d"} threshold={400}>
              {
                controlType: "Toolbar",
                children: [
                  {
                    controlType: "RssFeedIcon",
                    style: {
                      position: "absolute",
                      top: 20,
                      right: 24
                    }
                  },
                  {
                    controlType: "Typography",
                    style: {
                      color: "white",
                      position: "absolute",
                      right: 64,
                      top: 16
                    },
                    properties: {
                      variant: "h6"
                    },
                    children: [
                      {
                        controlType: "Text",
                        text: "وبلاگ مرحم"
                      }
                    ]
                  },
                  {
                    controlType: "IconButton",
                    properties: {
                      onClick: "${() => {window.setState({...window.state, feedOpen: false});}}"
                    },
                    style: {
                      position: "absolute",
                      left: 8,
                      top: 8
                    },
                    children: [
                      {
                        controlType: "ArrowBackIcon",
                        style: {
                          fill: "#fff"
                        }
                      }
                    ]
                  }
                ]
              }
              <ThemeProvider secondary={"#fff"}>
                <Tabs
                  style={{marginTop: 64, color: "#eee"}}
                  value={"${feedTabValue}"}
                  onChange={"${(event, newValue) => window.setState({...window.state, feedTabValue: newValue})}"}
                  variant="fullWidth"
                  indicatorColor="secondary"
                  textColor="secondary">
                  <Tab style={{color: "white"}} value={0} icon={<PlayCircleOutlineIcon />} label="ویدئو ها" />
                  <Tab style={{color: "white"}} value={1} icon={<MenuBookIcon />} label="مقالات" />
                </Tabs>
              </ThemeProvider>
          </CollapsibleAppBar>,
          {
            controlType: "div",
            style: {
              height: 128
            }
          },
          {
            controlType: "div",
            properties: {
              animation: "${feedListAnim}",
              animationTime: "${feedListAnimTime}"
            },
            style: {
              width: "100%",
              backgroundColor: "#fff"
            },
            children: [
              <SwipeableViews
                style={{marginTop: -16, padding: 0}}
                index={"${feedTabValue}"}
                onChangeIndex={"${(index) => window.setState({...window.state, feedTabValue: index})}"}
              >
              <TabPanel value={"${feedTabValue}"} index={0} style={{direction: "rtl"}}>
              {
                controlType: "Grid",
                style: {
                  backgroundColor: "#fff",
                  paddingTop: 16
                },
                properties: {
                  item: true,
                  xs: 12,
                  md: 6
                },
                children: [
                <div style={{display: "flex"}}>
                  {
                    controlType: "Typography",
                    properties: {
                      variant: "h6",
                      marginRight: 16,
                      paddingTop: 8
                    },
                    children: [
                      {
                        controlType: "Text",
                        text: "ویدئو های اخیر"
                      }
                    ]
                  }
                  <div style={{flexGrow: 1}}/>
                  {
                    controlType: "IconButton",
                    style: {
                      marginTop: -4
                    },
                    properties: {
                      onClick: "${() => {}}"
                    },
                    children: [
                      {
                        controlType: "SearchIcon"
                      }
                    ]
                  }
                  {
                    controlType: "IconButton",
                    style: {
                      marginTop: -4
                    },
                    properties: {
                      onClick: "${() => {}}"
                    },
                    children: [
                      {
                        controlType: "FilterListIcon"
                      }
                    ]
                  }
                  </div>,
              {
                controlType: "Grid",
                style: {
                  width: "calc(100% + 32px)",
                  marginLeft: -16,
                  marginRight: -16
                },
                properties: {
                  container: true,
                  spacing: 0
                },
                children: [
                  FeedItem(xs: 4, id: 0),
                  FeedItem(xs: 8, id: 1),
                  FeedItem(xs: 4, id: 2),
                  FeedItem(xs: 4, id: 3),
                  FeedItem(xs: 4, id: 4),
                  FeedItem(xs: 8, id: 5),
                  FeedItem(xs: 4, id: 6),
                  FeedItem(xs: 4, id: 7),
                  FeedItem(xs: 8, id: 8),
                  FeedItem(xs: 4, id: 9),
                  FeedItem(xs: 4, id: 10),
                  FeedItem(xs: 4, id: 11),
                  FeedItem(xs: 4, id: 12),
                  FeedItem(xs: 8, id: 13),
                  FeedItem(xs: 4, id: 14),
                  FeedItem(xs: 4, id: 15),
                  FeedItem(xs: 4, id: 16),
                  FeedItem(xs: 8, id: 17),
                  FeedItem(xs: 4, id: 18),
                  FeedItem(xs: 4, id: 19),
                  FeedItem(xs: 8, id: 20),
                  FeedItem(xs: 4, id: 21),
                  FeedItem(xs: 4, id: 22),
                  FeedItem(xs: 4, id: 23)
                ]
              }
                ]
              }
              </TabPanel>
              <TabPanel value={"${feedTabValue}"} index={1} style={{direction: "rtl"}}>
              {
                controlType: "Grid",
                style: {
                  backgroundColor: "#fff",
                  paddingTop: 16
                },
                properties: {
                  item: true,
                  xs: 12,
                  md: 6
                },
                children: [
                  <div style={{display: "flex"}}>
                  {
                    controlType: "Typography",
                    properties: {
                      variant: "h6",
                      marginRight: 16,
                      paddingTop: 8
                    },
                    children: [
                      {
                        controlType: "Text",
                        text: "پست های اخیر"
                      }
                    ]
                  }
                  <div style={{flexGrow: 1}}/>
                  {
                    controlType: "IconButton",
                    style: {
                      marginTop: -4
                    },
                    properties: {
                      onClick: "${() => {}}"
                    },
                    children: [
                      {
                        controlType: "SearchIcon"
                      }
                    ]
                  }
                  {
                    controlType: "IconButton",
                    style: {
                      marginTop: -4
                    },
                    properties: {
                      onClick: "${() => {}}"
                    },
                    children: [
                      {
                        controlType: "FilterListIcon"
                      }
                    ]
                  }
                  </div>,
                  {
                    controlType: "div",
                    style: {
                      width: "calc(100% + 24px)",
                      padding: -16
                    },
                    children: [
                      {
                        controlType: "List",
                        children: [
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem,
                          feedItem
                        ]
                      }
                    ]
                  }
                ]
              }
              </TabPanel>
          </SwipeableViews>
            ]
          }
        ]
      }
    </Dialog>)
