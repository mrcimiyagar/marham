
@ClientSide
define function loadMessenger
  runJS(jsCode: "
    if (page.canTransit) {
      page.canTransit = false;
      page.document.documentElement.style.overflow = 'hidden'; 
      page.currentMsgTabValue = 1;
      page.setState({...page.state, messengerOpen: true, msgTabValue: 1});
      setTimeout(() => {page.canTransit = true;}, 250);
    }
  ")

@ClientSide
define function hideMessengerAndShowChat
  runJS(jsCode: "
    if (page.canTransit) {
      page.canTransit = false;
      page.setState({...page.state, messengerOpen: true, chatOpen: true, msgTabValue: page.currentMsgTabValue});
      setTimeout(() => {page.canTransit = true;}, 250);
    }
  ")

@ClientSide
define function hideMessenger
  runJS(jsCode: "
    if (page.canTransit) {
      page.canTransit = false;
      page.document.documentElement.style.overflow = page.documentElementOverflow; 
      page.setState({...page.state, messengerOpen: false, msgTabValue: page.currentMsgTabValue});
      setTimeout(() => {page.canTransit = true;}, 250);
    }
  ")

chatItem = (
        {
          controlType: "div",
          style: {
            backgroundColor: "#fff"
          },
          children: [
            {
              controlType: "ListItem",
              properties: {
                button: true,
                component: "a",
                onClick: "${() => {page.hideMessengerAndShowChat();}}"
              },
              children: [
                {
                  controlType: "ListItemAvatar",
                  children: [
                    {
                      controlType: "Avatar",
                      style: {
                        width: 64,
                        height: 64
                      },
                      properties: {
                        src: "/webapp/res/user-avatar.jpg"
                      }
                    }
                  ]
                },
                {
                  controlType: "ListItemText",
                  properties: {
                    primary: "کیهان محمدی",
                    secondary: "سلام . حالت خوبه ؟"
                  },
                  style: {
                    width: 200,
                    textAlign: "right",
                    marginRight: 16,
                    marginLeft: 16
                  }
                },
                {
                  controlType: "Typography",
                  style: {
                    fontSize: 12,
                    direction: "ltr"
                  },
                  children: [
                    {
                      controlType: "Text",
                      text: "14:12"
                    }
                  ]
                }
              ]
            },
            {
              controlType: "Divider"
            }
          ]
        })

callItem = (
        {
          controlType: "div",
          children: [
            {
              controlType: "ListItem",
              properties: {
                button: true,
                component: "a",
                onClick: "${() => {}}"
              },
              children: [
                {
                  controlType: "ListItemAvatar",
                  children: [
                    {
                      controlType: "Avatar",
                      style: {
                        width: 56,
                        height: 56
                      },
                      properties: {
                        src: "/webapp/res/user-avatar.jpg"
                      }
                    }
                  ]
                },
                {
                  controlType: "ListItemText",
                  properties: {
                    primary: "کیهان محمدی",
                    secondary: "12 دقیقه"
                  },
                  style: {
                    width: 200,
                    textAlign: "right",
                    marginRight: 16,
                    marginLeft: 16
                  }
                },
                {
                  controlType: "Typography",
                  style: {
                    fontSize: 12,
                    direction: "ltr"
                  },
                  children: [
                    {
                      controlType: "Text",
                      text: "14:12"
                    }
                  ]
                }
              ]
            },
            {
              controlType: "Divider"
            }
          ]
        })

@ClientSide
define function setCurrentMsgTab with params index
  runJS(jsCode: "page.currentMsgTabValue = " + index + "; page.setState({...page.state, messengerOpen: true, msgTabValue: " + index + "});")

@ClientSide
define function handlePosSave with params x
  runJS(jsCode: "
    page.dragStartX = " + x + ";
  ")

@ClientSide
define function prepareSlideBack with params x
  runJS(jsCode: "
    if ((page.dragStartX - " + x + ") < -25) {
      let container = page.document.getElementById('messengerContainer');
      container.style.visibility = 'hidden';
      page.hideMessenger();
      setTimeout(() => {
        container.style.visibility = 'visible';
      }, 1100);
    }
  ")

messengerPage = (
  <DraggableDialog onStart={"${(e, data) => {page.handlePosSave({x: data.lastX});}}"}
                   onStop={"${(e, data) => {page.prepareSlideBack({x: data.lastX});}}"}
                   id="messengerContainer"
                   fullScreen
                   style={{direction: "rtl"}}
                   open={"${messengerOpen}"}
                   transitionType={"Slide"}>
    <div>
      {
        controlType: "Box",
        style: {
          width: "100%",
          height: "100%",
          position: "absolute",
          left: 0,
          top: 0,
          overflow: "hidden"
        },
        children: [
          {
            controlType: "div",
            style: {
              width: "100%",
              height: "calc(100vh - 64px)",
              backgroundColor: "#fff",
              marginTop: 64,
              overflow: "auto"
            },
            children: [
              <SwipeableViews
                style={{direction: "ltr", height: "100%", backgroundColor: "#eee", padding: 0}}
                index={"${msgTabValue}"}
                onChangeIndex={"${(index) => {page.setCurrentMsgTab({index: index})}}"}
                >
                <TabPanel value={"${msgTabValue}"} index={0} style={{marginLeft: -8, marginRight: -8, marginTop: -24, direction: "rtl"}}>
                {
                  controlType: "List",
                  style: {
                    paddingTop: 16
                  },
                  children: [
                    <div style={{direction: "rtl", marginTop: 8, paddingTop: 8, width: "100%", height: 32, color: "#444", textAlign: "right"}}>
                      "12 فروردین 1399"
                    </div>,
                    <Paper style={{width: "100%", height: "auto"}}>
                      callItem
                      callItem
                      callItem
                    </Paper>,
                    <div style={{direction: "rtl", marginTop: 8, paddingTop: 8, width: "100%", height: 32, color: "#444", textAlign: "right"}}>
                      "11 فروردین 1399"
                    </div>,
                    <Paper style={{width: "100%", height: "auto"}}>
                      callItem
                      callItem
                    </Paper>,
                    <div style={{direction: "rtl", marginTop: 8, paddingTop: 8, width: "100%", height: 32, color: "#444", textAlign: "right"}}>
                      "10 فروردین 1399"
                    </div>,
                    <Paper style={{width: "100%", height: "auto"}}>
                      callItem
                      callItem
                    </Paper>
                  ]
                }
                </TabPanel>
                <TabPanel value={"${msgTabValue}"} index={1} style={{marginLeft: -24, marginRight: -24, marginTop: -32, direction: "rtl"}}>
                {
                  controlType: "List",
                  style: {
                    paddingTop: 16
                  },
                  children: [
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem,
                    chatItem
                  ]
                }
                </TabPanel>
              </SwipeableViews>
            ]
          },
          {
            controlType: "AppBar",
            properties: {
              id: "messengerAppBar",
              animation: "${messengerAppBarAnim}",
              animationTime: "${messengerAppBarAnimTime}",
              hideOnScroll: true,
              color: "#07d"
            },
            style: {
              width: "100%",
              height: 64,
              marginLeft: 0,
              marginRight: 0,
              position: "absolute",
              top: 0,
              left: 0
            },
            children: [
              {
                controlType: "Toolbar",
                children: [
                  {
                    controlType: "SearchIcon",
                    style: {
                      position: "absolute",
                      top: 20,
                      right: 24
                    }
                  },
              <ThemeProvider secondary={"#fff"}>
                <Tabs
                  style={{direction: "ltr", paddingTop: 8, height: 56, marginLeft: 96, marginRight: 96, color: "#eee"}}
                  value={"${msgTabValue}"}
                  onChange={"${(event, newValue) => {page.setCurrentMsgTab({index: newValue})}}"}
                  variant="fullWidth"
                  indicatorColor="secondary"
                  textColor="secondary">
                  <Tab style={{color: "white"}} value={0} label={<Typography variant="b" style={{fontSize: 16}}>"تماس ها"</Typography>} />
                  <Tab style={{color: "white"}} value={1} label={<Typography variant="b" style={{fontSize: 16}}>"پیام ها"</Typography>} />
                </Tabs>
              </ThemeProvider>,
                  {
                    controlType: "IconButton",
                    properties: {
                      onClick: "${() => {page.hideMessenger();}}"
                    },
                    style: {
                      position: "absolute",
                      left: 8,
                      top: 8
                    },
                    children: [
                      {
                        controlType: "ArrowBackIcon",
                        style: {
                          fill: "#fff"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
                      {
                        controlType: "Fab",
                        properties: {
                          color: "#a15",
                          animation: "${messengerFabAnim}",
                          animationTime: "${messengerFabAnimTime}"
                        },
                        style: {
                          position: "fixed",
                          left: 32,
                          bottom: 32
                        },
                        children: [
                          {
                            controlType: "EditIcon"
                          }
                        ]
                      }
        ]
      }
    </div>
  </DraggableDialog>
  )